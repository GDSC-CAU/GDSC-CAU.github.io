__NUXT_JSONP__("/articles/javascript-declaration", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO){return {data:[{article:{slug:"javascript-declaration",description:"자바스크립트 변수 선언 var, let, const",title:"JavaScript 변수 선언",category:"Front-End",author:ad,featured:"none",toc:[{id:an,depth:ae,text:ao},{id:ap,depth:ae,text:aq},{id:ar,depth:ae,text:as},{id:at,depth:U,text:au},{id:av,depth:U,text:aw},{id:ax,depth:U,text:ay},{id:az,depth:U,text:aA},{id:aB,depth:U,text:aC}],body:{type:"root",children:[{type:b,tag:"h1",props:{id:"변수-선언-variable-declaration"},children:[{type:b,tag:x,props:{ariaHidden:H,href:"#%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8-variable-declaration",tabIndex:N},children:[{type:b,tag:c,props:{className:[O,P]},children:[]}]},{type:a,value:"변수 선언 (Variable Declaration)"}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"자바스크립트는 변수 선언을 할 때 타 언어와 다르게 type을 명시할 필요가 없다. C나 Java 등 대부분의 언어는 변수를 선언할 때 변수 안에 담기는 값의 type을 고려하여 변수를 선언한다."}]},{type:a,value:f},{type:b,tag:A,props:{className:[B]},children:[{type:b,tag:C,props:{className:[D,"language-c"]},children:[{type:b,tag:E,props:{},children:[{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"\u002F\u002F C언어"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"int"}]},{type:a,value:" num1 "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:"1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:aD}]},{type:a,value:" char1 "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,aD]},children:[{type:a,value:"'a'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"하지만 자바스크립트는 number, string, boolean 과 같이 다른 type의 값들도 모두 같은 키워드를 사용하여 변수를 선언한다. 즉 변수를 선언할 때 type을 고려하지 않는다. 자바스크립트는 변수의 사용 조건을 고려하여 변수를 선언해야하고 고려해야하는 조건의 내용은 다음과 같다."}]},{type:a,value:f},{type:b,tag:af,props:{},children:[{type:a,value:f},{type:b,tag:L,props:{},children:[{type:a,value:"중복 선언 가능 여부"}]},{type:a,value:f},{type:b,tag:L,props:{},children:[{type:a,value:"재할당 가능 여부"}]},{type:a,value:f},{type:b,tag:L,props:{},children:[{type:a,value:"변수 스코프 유효 범위"}]},{type:a,value:f},{type:b,tag:L,props:{},children:[{type:a,value:"변수 호이스팅 방식"}]},{type:a,value:f},{type:b,tag:L,props:{},children:[{type:a,value:"전역객체 프로퍼티 여부"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"각 조건을 살펴보면서 내용을 이해해보자."}]},{type:a,value:f},{type:b,tag:ag,props:{id:an},children:[{type:b,tag:x,props:{ariaHidden:H,href:"#%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8-%ED%82%A4%EC%9B%8C%EB%93%9C",tabIndex:N},children:[{type:b,tag:c,props:{className:[O,P]},children:[]}]},{type:a,value:ao}]},{type:a,value:f},{type:b,tag:af,props:{},children:[{type:a,value:f},{type:b,tag:L,props:{},children:[{type:a,value:J}]},{type:a,value:f},{type:b,tag:L,props:{},children:[{type:a,value:I}]},{type:a,value:f},{type:b,tag:L,props:{},children:[{type:a,value:X}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:ag,props:{id:ap},children:[{type:b,tag:x,props:{ariaHidden:H,href:"#%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8%EC%9D%98-3%EB%8B%A8%EA%B3%84",tabIndex:N},children:[{type:b,tag:c,props:{className:[O,P]},children:[]}]},{type:a,value:aq}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"자바스크립트는 총 3단계에 걸쳐 변수를 생성한다. 변수 선언의 3단계는 호이스팅 파트에서 자세하게 다루겠다."}]},{type:a,value:f},{type:b,tag:af,props:{},children:[{type:a,value:f},{type:b,tag:L,props:{},children:[{type:a,value:ah}]},{type:a,value:f},{type:b,tag:L,props:{},children:[{type:a,value:ai}]},{type:a,value:f},{type:b,tag:L,props:{},children:[{type:a,value:"할당"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:ag,props:{id:ar},children:[{type:b,tag:x,props:{ariaHidden:H,href:"#%EB%B3%80%EC%88%98%EC%9D%98-%EC%82%AC%EC%9A%A9-%EC%A1%B0%EA%B1%B4%EC%97%90-%EB%94%B0%EB%A5%B8-%ED%82%A4%EC%9B%8C%EB%93%9C-%EB%B6%84%EB%A5%98",tabIndex:N},children:[{type:b,tag:c,props:{className:[O,P]},children:[]}]},{type:a,value:as}]},{type:a,value:f},{type:b,tag:V,props:{id:at},children:[{type:b,tag:x,props:{ariaHidden:H,href:"#1-%EC%A4%91%EB%B3%B5-%EC%84%A0%EC%96%B8-%EA%B0%80%EB%8A%A5-%EC%97%AC%EB%B6%80",tabIndex:N},children:[{type:b,tag:c,props:{className:[O,P]},children:[]}]},{type:a,value:au}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"중복 선언은 변수를 선언하여 사용하다가 이후에 같은 이름의 변수를 다시 한번 선언하는 것이다. var은 중복 선언이 가능하고 let, const는 중복 선언이 불가능하다."}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"중복 선언 가능 : var"}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"중복 선언 불가능 : let, const"}]},{type:a,value:f},{type:b,tag:A,props:{className:[B]},children:[{type:b,tag:C,props:{className:[D,F]},children:[{type:b,tag:E,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:J}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"\u002F\u002F10"}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:J}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aE}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"\u002F\u002F이미 선언되고 값이 할당된 변수를 중복 선언만 하고 초기화하지 않으면 이전 값이 그대로 남아있다."}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:J}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aE}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:A,props:{className:[B]},children:[{type:b,tag:C,props:{className:[D,F]},children:[{type:b,tag:E,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:I}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:I}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:X}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:X}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:V,props:{id:av},children:[{type:b,tag:x,props:{ariaHidden:H,href:"#2-%EC%9E%AC%ED%95%A0%EB%8B%B9-%EA%B0%80%EB%8A%A5-%EC%97%AC%EB%B6%80",tabIndex:N},children:[{type:b,tag:c,props:{className:[O,P]},children:[]}]},{type:a,value:aw}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"재할당은 변수를 선언한 뒤에 값을 할당하여 사용하다가 이후에 변수에 다른 값을 대입하는 것을 뜻한다. var, let은 재할당이 가능하고, const는 재할당이 불가능하다."}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"재할당 가능(변수) : var, let"}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"재할당 불가능(상수) : const"}]},{type:a,value:f},{type:b,tag:A,props:{className:[B]},children:[{type:b,tag:C,props:{className:[D,F]},children:[{type:b,tag:E,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:J}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:I}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"\nb "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Y}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Y}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:A,props:{className:[B]},children:[{type:b,tag:C,props:{className:[D,F]},children:[{type:b,tag:E,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:X}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:aF},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:V,props:{id:ax},children:[{type:b,tag:x,props:{ariaHidden:H,href:"#3-%EB%B3%80%EC%88%98-%EC%8A%A4%EC%BD%94%ED%94%84-%EC%9C%A0%ED%9A%A8-%EB%B2%94%EC%9C%84",tabIndex:N},children:[{type:b,tag:c,props:{className:[O,P]},children:[]}]},{type:a,value:ay}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"변수 스코프 범위란 선언한 변수가 사용될 범위를 뜻한다. var은 함수 레벨 스코프를 가지고 let, const는 블록 레벨 스코프를 가진다. 자세한 내용은 아래의 코드를 참고해보자."}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"함수 레벨 스코프 : var"}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"블록 레벨 스코프 : let, const"}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"function {} 키워드를 통해 블록이 만들어지고 그 블록 안에 선언된 변수는 해당 함수 내부에서만 사용이 가능하다. 이때 if 나 while 문 등은 {} 블록이 선언되어 사용되지만 함수가 아니다."}]},{type:a,value:f},{type:b,tag:A,props:{className:[B]},children:[{type:b,tag:C,props:{className:[D,F]},children:[{type:b,tag:E,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:J}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:S}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,k,_]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,aa]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:J}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:aH}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:al}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:S}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:J}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:T}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:al}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Y}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aI}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aJ}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"함수 뿐만 아니라 if, for, while, try ~ catch 등 블록 안에 선언된 모든 변수들은 해당 블록 안에서만 사용할 수 있다."}]},{type:a,value:f},{type:b,tag:A,props:{className:[B]},children:[{type:b,tag:C,props:{className:[D,F]},children:[{type:b,tag:E,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:o}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:I}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:S}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,k,_]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,aa]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:I}]},{type:a,value:aG},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:aH}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:al}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:S}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:I}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:T}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Y}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"\u002F\u002F 변수 c 는 if문 블록 안에서 선언되어 있고 아래의 코드는 if 문 밖에서 실행된다."}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"\u002F\u002F 따라서 if 블록 밖에서 c라는 변수는 선언되지 않았으므로 에러가 발생한다."}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aI}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aJ}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:V,props:{id:az},children:[{type:b,tag:x,props:{ariaHidden:H,href:"#4-%EB%B3%80%EC%88%98-%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85-%EB%B0%A9%EC%8B%9D",tabIndex:N},children:[{type:b,tag:c,props:{className:[O,P]},children:[]}]},{type:a,value:aA}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"호이스팅이란 코드가 실행되기 전 변수나 함수 선언문이 맨 위로 끌어올려지는 현상을 뜻한다. 아래의 코드를 보자."}]},{type:a,value:f},{type:b,tag:A,props:{className:[B]},children:[{type:b,tag:C,props:{className:[D,F]},children:[{type:b,tag:E,props:{},children:[{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:J}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"코드를 보면 아직 선언되지 않은 a가 console.log 에서 사용되기 때문에 에러를 발생시킬 것만 같다. 하지만 막상 실행을 시키면 에러는 발생하지 않고 undefined 가 출력된다. 호이스팅이 발생한 것이다. 자바스크립트는 아래의 코드를 다음과 같이 해석한다."}]},{type:a,value:f},{type:b,tag:A,props:{className:[B]},children:[{type:b,tag:C,props:{className:[D,F]},children:[{type:b,tag:E,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:J}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"\n\na "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"맨 처음 코드의 var a = 10; 부분이 선언문과 값 할당이 분리되었고 선언문이 코드의 가장 최상단으로 끌어올려졌다. 따라서 console.log(a);를 실행할 때 아직 선언되지 않은 변수 a 를 참조하는 것으로 보이지만, 자바스크립트 내부적으로 호이스팅이 동작하여 a는 선언은 되었지만 값이 할당되지 않은 undefined 상태가 된다. 따라서 위의 코드는 에러를 발생시키지 않고 undefined를 출력하는 것이다."}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"var, let, const 모두 변수 호이스팅이 발생하지만 동작하는 방식이 다르다. var은 호이스팅이 발생하면서 변수 선언의 3단계 중 선언과 초기화가 실행된다. 하지만 let과 const는 호이스팅이 발생하면서 변수 선언의 3단계 중 선언만 실행된다."}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"호이스팅 방식 1 (선언, 초기화) : var"}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"호이스팅 방식 2 (선언) : let, const"}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"방식 1 : var"}]},{type:a,value:f},{type:b,tag:A,props:{className:[B]},children:[{type:b,tag:C,props:{className:[D,F]},children:[{type:b,tag:E,props:{},children:[{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"\u002F\u002F undefined"}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:J}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:T}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"코드 실행 전에 자바스크립트 엔진이 미리 var keyword의 변수를 "},{type:b,tag:ac,props:{},children:[{type:a,value:ah}]},{type:a,value:"하고, undefined로 "},{type:b,tag:ac,props:{},children:[{type:a,value:ai}]},{type:a,value:"한다. 이후에 실제 변수가 선언된 문장을 만나면 알맞은 값을 할당한다."}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"방식 2 : let, const"}]},{type:a,value:f},{type:b,tag:A,props:{className:[B]},children:[{type:b,tag:C,props:{className:[D,F]},children:[{type:b,tag:E,props:{},children:[{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:am},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:Q}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:I}]},{type:a,value:aK},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"뒤에 선언된 변수를 앞에서 참조하면 에러가 발생한다. 마치 호이스팅이 되지 않은 것처럼 보일 수 있다. 하지만 let, const도 호이스팅이 발생한다. 코드 실행 전에 자바스크립트 엔진이 미리 변수는 "},{type:b,tag:ac,props:{},children:[{type:a,value:ah}]},{type:a,value:"하지만 "},{type:b,tag:ac,props:{},children:[{type:a,value:ai}]},{type:a,value:"는 ****따로 하지 않는다. 따라서 값을 참조할 수 없어서 Error가 발생하고 이후에 변수 선언문을 만나는 순간에 값을 초기화 한다. 이렇게 변수 선언과 초기화가 이루어지는 시점이 다른 경우 그 사이에 일시적으로 변수 값을 참조할 수 없는 구간을 TDZ (Temporal Dead Zone)이라고 부른다."}]},{type:a,value:f},{type:b,tag:A,props:{className:[B]},children:[{type:b,tag:C,props:{className:[D,F]},children:[{type:b,tag:E,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:I}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,k,_]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,aa]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aL}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:I}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:S}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"위의 코드를 실행하게 되면 console.log(a);를 실행할 때 a is not defined라는 ReferenceError가 발생한다. 위의 코드는 자바스크립트 엔진이 실행할 때 호이스팅 되어 아래와 같은 상태로 해석된다."}]},{type:a,value:f},{type:b,tag:A,props:{className:[B]},children:[{type:b,tag:C,props:{className:[D,F]},children:[{type:b,tag:E,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:I}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:y},{type:b,tag:c,props:{className:[d,k,_]},children:[{type:a,value:$}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,aa]},children:[{type:a,value:H}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:R}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:I}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"\u002F\u002F 선언만 하고 초기화 되지 않음 "}]},{type:a,value:K},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:aL}]},{type:a,value:"\n    a "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:M}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:S}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"자바스크립트 엔진에서는 전역변수보다 지역변수가 우선 순위를 가지는데, if 블록에서 a 변수에 함수 호이스팅이 일어났지만 a라는 변수가 선언되었을 뿐 값은 초기화 되지 않아서 전역변수 a = 10; 이 있음에도 불구하고  값을 참조할 수 없다는 ReferenceError가 나타나게 된다. 이를 TDZ 구간이라 부른다."}]},{type:a,value:f},{type:b,tag:V,props:{id:aB},children:[{type:b,tag:x,props:{ariaHidden:H,href:"#5-%EC%A0%84%EC%97%AD%EA%B0%9D%EC%B2%B4-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0-%EC%97%AC%EB%B6%80",tabIndex:N},children:[{type:b,tag:c,props:{className:[O,P]},children:[]}]},{type:a,value:aC}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"자바스크립트에서 모든 객체는 프로퍼티를 가진다. 자바스크립트 코드가 실행될 때, 전체 코드를 모두 포함하는 하나의 객체가 만들어지는데 그 객체를 전역객체라고 한다."}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"브라우저에서 실행되는 자바스크립트의 경우에는 전역 객체는 window라는 이름으로 매핑되고, node.js 환경에서 실행되는 자바스크립트의 경우에는 global이라는 이름으로 매핑된다. 아래의 예시는 브라우저에서 실행 되었다고 가정한다."}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"당연히 전역객체도 객체이기 때문에 프로퍼티를 가진다. 이때 var로 선언된 변수는 전역객체의 프로퍼티가 되지만, let과 const로 선언된 변수는 전역객체의 프로퍼티가 되지 않는다."}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"전역객체의 프로퍼티가 된다 : var"}]},{type:a,value:f},{type:b,tag:n,props:{},children:[{type:a,value:"전역객체의 프로퍼티가 되지 않는다 : let, const"}]},{type:a,value:f},{type:b,tag:A,props:{className:[B]},children:[{type:b,tag:C,props:{className:[D,F]},children:[{type:b,tag:E,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:J}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:T}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,aM,aN]},children:[{type:a,value:aO}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:T}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:A,props:{className:[B]},children:[{type:b,tag:C,props:{className:[D,F]},children:[{type:b,tag:E,props:{},children:[{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:I}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:q}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,r]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:b,tag:c,props:{className:[d,aM,aN]},children:[{type:a,value:aO}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,t]},children:[{type:a,value:x}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:"\u002F\u002F undefined -\u003E 전역객체에 a라는 프로퍼티가 없다."}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,i,u]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:s}]},{type:b,tag:c,props:{className:[d,v,o,t]},children:[{type:a,value:w}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:m}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:g},{type:b,tag:c,props:{className:[d,j]},children:[{type:a,value:T}]},{type:a,value:f}]}]}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002Fjavascript-declaration",extension:".md",createdAt:"2021-12-28T07:08:03.000Z",updatedAt:"2022-03-10T05:16:13.000Z"},prev:{slug:"data-study-week2-scrapy",title:"웹크롤러 Scrapy"},next:{slug:"javascript-function",title:"JavaScript 함수"},member:[{slug:"youngbeen",name:ad,description:"중앙대학교에서 GDSC 멤버로 활동하고 있습니다. 현재 웹 개발에 관심을 가지고 공부하고 있습니다.",role:"Alumni(21-22 Member)",img:"youngbeen.jpg",dir:"\u002Fmembers",path:"\u002Fmembers\u002Fyoungbeen",extension:".yaml",createdAt:"2021-11-26T06:22:53.000Z",updatedAt:"2022-10-26T12:57:45.000Z"}],authorName:ad}],fetch:{},mutations:void 0}}("text","element","span","token","punctuation","\n"," ",";","console","comment","keyword","(",")","p","function","operator","=","number",".","property-access","class-name","method","log","a","\n\n","10","div","nuxt-content-highlight","pre","line-numbers","code","language-jsx"," a ","true","let","var","\n    ","li","20",-1,"icon","icon-link","\u002F\u002F Error","{","}","\u002F\u002F 10",3,"h3"," b ","const","\u002F\u002F 20","hi","control-flow","if","boolean","c","strong","Youngbeen Kim",2,"ol","h2","선언","초기화"," a","b","\u002F\u002F 40","f","변수-선언-키워드","변수 선언 키워드","변수-선언의-3단계","변수 선언의 3단계","변수의-사용-조건에-따른-키워드-분류","변수의 사용 조건에 따른 키워드 분류","1-중복-선언-가능-여부","1. 중복 선언 가능 여부","2-재할당-가능-여부","2. 재할당 가능 여부","3-변수-스코프-유효-범위","3. 변수 스코프 유효 범위","4-변수-호이스팅-방식","4. 변수 호이스팅 방식","5-전역객체-프로퍼티-여부","5. 전역객체 프로퍼티 여부","char","\u002F\u002F20","\na "," c ","40","\u002F\u002F 변수 a 는 hi 라는 함수 내부에 선언되어 있고 아래의 코드는 hi함수 밖에서 실행된다.","\u002F\u002F 따라서 함수 밖에서 a라는 변수는 선언되지 않았으므로 에러가 발생한다."," f ","\u002F\u002F ReferenceError : a is not defined","dom","variable","window")));