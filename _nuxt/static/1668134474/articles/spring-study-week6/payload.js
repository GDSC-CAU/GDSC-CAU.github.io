__NUXT_JSONP__("/articles/spring-study-week6", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D){return {data:[{article:{slug:"spring-study-week6",description:"스프링 부트 서비스 코드와 배포 환경 구성을 조합하여 실제로 서비스를 배포해보자",title:"EC2 서버에 프로젝트를 배포해 보자",category:"Back-End",author:t,featured:"Featured",img:"spring.png",toc:[{id:v,depth:2,text:w},{id:x,depth:3,text:y}],body:{type:"root",children:[{type:c,tag:"h2",props:{id:v},children:[{type:c,tag:n,props:{ariaHidden:o,href:"#%EC%8A%A4%ED%94%84%EB%A7%81-%EC%8A%A4%ED%84%B0%EB%94%94-6%EC%A3%BC%EC%B0%A8%EC%B1%95%ED%84%B08",tabIndex:p},children:[{type:c,tag:q,props:{className:[r,s]},children:[]}]},{type:a,value:w}]},{type:a,value:b},{type:c,tag:"h3",props:{id:x},children:[{type:c,tag:n,props:{ariaHidden:o,href:"#ec2%EC%97%90-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-clone-%EB%B0%9B%EA%B8%B0",tabIndex:p},children:[{type:c,tag:q,props:{className:[r,s]},children:[]}]},{type:a,value:y}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:z}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:g,props:{},children:[{type:a,value:A}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"설치가 완료되면 다음 명령어로 설치 상태 확인"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:g,props:{},children:[{type:a,value:"git --version"}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"깃이 성공적으로 처리되면 git clone으로 프로젝트를 저장할 디렉토리 생성"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:g,props:{},children:[{type:a,value:"mkdir ~\u002Fapp && mkdir ~\u002Fapp\u002Fstep1"}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:z}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:g,props:{},children:[{type:a,value:A}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"생성된 디렉토리로 이동"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:g,props:{},children:[{type:a,value:B}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"깃허브 웹페이지에서 https 주소를 복사"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:g,props:{},children:[{type:a,value:"git clone 복사한 주소"}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"git clone이 끝났으면 클론된 프로젝트로 이동해서 파일들이 잘 복사되었는지 확인"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:h,props:{className:[i]},children:[{type:c,tag:j,props:{className:[k,l]},children:[{type:c,tag:g,props:{},children:[{type:a,value:"   ll\n"}]}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"코드가 잘 수행되는지 테스트로 검증"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"```.\u002Fgradle test``"}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"코드가 정상적으로 테스트를 통과\n"},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"테스트가 실패해서 수정하고 깃허브에 푸시했다면 프로젝트 폴더 안에서 다음 명령어를 사용하면 된다."}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:h,props:{className:[i]},children:[{type:c,tag:j,props:{className:[k,l]},children:[{type:c,tag:g,props:{},children:[{type:a,value:"```git pull```\n"}]}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"만약 gradlew: Permission denied 와 같이 gradlew 접근 권한이 없다는 메시지가 뜨면,"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:g,props:{},children:[{type:a,value:"-bash: .\u002Fgradlew: permission denied"}]},{type:a,value:"\n다음 명령어로 실행 권한을 추가한 뒤 다시 테스트를 수행하면 된다.\n"},{type:c,tag:g,props:{},children:[{type:a,value:"chmod +x .\u002Fgradlew"}]}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:u,props:{id:"배포-스크립트-만들기"},children:[{type:c,tag:n,props:{ariaHidden:o,href:"#%EB%B0%B0%ED%8F%AC-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0",tabIndex:p},children:[{type:c,tag:q,props:{className:[r,s]},children:[]}]},{type:a,value:"배포 스크립트 만들기"}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"배포란?\n"},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"git clone 혹은 git pull을 통해 새 버전의 프로젝트를 받는 것"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"Gradle 이나 Maven을 통해 프로젝트 테스트와 빌드"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"EC2 서버에서 해당 프로젝트 실행 및 재실행"}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"쉘 스크립트란?\n"},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"배포할 때 마다 개발자가 하나하나 명령어를 실행하는 것은 불편함"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"스크립트만 실행하면 앞의 과정이 차례로 진행되도록 함"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"쉘 스크립트와 빔(vim)은 서로 다른 역할을 함"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"쉘 스크립트는 .sh라는 파일 확장자를 가진 파일이다"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"노드 JS가 .js라는 파일을 통해 서버에서 작동하는 것처럼 쉘 스크립트 역시 리눅스에서 기본적으로 사용할 수 있는 스크립트 파일의 한 종류임"}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:c,tag:g,props:{},children:[{type:a,value:B}]}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"vim ~\u002Fapp\u002Fstep1\u002F에 deploy.sh \u002F\u002F배달이라도 하나의 직업 이상을 가져야 함"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:h,props:{className:[i]},children:[{type:c,tag:j,props:{className:[k,l]},children:[{type:c,tag:g,props:{},children:[{type:a,value:"#!\u002Fbin\u002Fbash\n\nREPOSITORY=\u002Fhome\u002Fec2-user\u002Fapp\u002F{clone한 프로젝트 저장한 경로}\nPROJECT_NAME={프로젝트명}\n\ncd $REPOSITORY\u002F$PROJECT_NAME\u002F\n\necho \"\u003E Git Pull\"\n\ngit pull\n\necho \"\u003E 프로젝트 Build 시작\"\n\n.\u002Fgradlew build\n\necho \"\u003E step1 디렉토리로 이동\"\n\ncd $REPOSITORY\n\necho \"\u003E Build 파일 복사\"\n\ncp $REPOSITORY\u002F$PROJECT_NAME\u002Fbuild\u002Flibs\u002F*.jar $REPOSITORY\u002F\n\necho \"\u003E 현재 구동중인 애플리케이션 pid 확인\"\n\nCURRENT_PID=$(pgrep -f ${PROJECT_NAME}.*.jar)\n\necho \"현재 구동 중인 애플리케이션 pid: $CURRENT_PID\"\n\nif [ -z \"$CURRENT_PID\" ]; then\n        echo \"\u003E 현재 구동 중인 애플리케이션이 없으므로 종료하지 않습니다.\"\nelse\n        echo \"\u003E kill -15 $CURRENT_PID\"\n        kill -15 $CURRENT_PID\n        sleep 5\nfi\n\necho \"\u003E 새 애플리케이션 배포\"\n\nJAR_NAME=$(ls -tr $REPOSITORY\u002F | grep jar | tail -n 1)\n\necho \"\u003E JAR Name: $JAR_NAME\"\n\nnohup java -jar \\\n       -Dspring.config.location=classpath:\u002Fapplication.properties,classpath:\u002Fapplication-real.properties,\u002Fhome\u002Fec2-user\u002Fapp\u002Fapplication-oauth.properties,\u002Fhome\u002Fec2-user\u002Fapp\u002Fapplication-real-db.properties \\\n       -Dspring.profiles.active=real \\\n       $REPOSITORY\u002F$JAR_NAME 2\u003E&1 &\n"}]}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"이렇게 생성한 스크립트에 실행 권한 추가"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:g,props:{},children:[{type:a,value:"chmod +x .\u002Fdeploy.sh"}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"스크립트를 명령어로 시작"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:g,props:{},children:[{type:a,value:".\u002Fdeploy.sh"}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"명령어가 시작되면 로그가 촐력되며 애플리케이션이 실행된다"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"잘 진행 됐으면, noph.out 파일을 열어 로그 보기 -\u003E nohup.out은 실행되는 애플리케이션에서 출력되는 모든 내용을 가짐"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:g,props:{},children:[{type:a,value:"vim nohup.out"}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"**that could not be found.**라는 에러가 발생하면 어플리케이션 실행에 실패한 것\n"},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"원인: ClientRegistrationRepositroy를 생성하려면 clientId와 clientSecret가 필수"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"로컬 PC에서 실행할 때는 application-oauth.porperties가 있어 문제 없음"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"하지만 이 파일은 .gitignore로 git에서 제외 대상이므로 깃허브에 올라가지 않음"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"애플리케이션을 실행하기 위해 공개된 저장소에 ClientId와 ClientSecret을 올릴 수 없으니 서버에 직접 이 설정을 가지고 있게 해야함"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"먼저 step1이 아닌 app 디렉토리에 properties 파일 생성\n"},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:c,tag:g,props:{},children:[{type:a,value:"vim \u002Fhome\u002Fec2-user\u002Fapp\u002Fapplication-oauth.properties"}]}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"로컬에 있는 application-oauth.properties 파일 내용을 그대로 붙여넣기한 후 해당 파일을 저장하고 종료(:wq)"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"방금 생성한 application-oauth.properties를 쓰도록 deploy.sh 파일 수정\n"},{type:c,tag:h,props:{className:[i]},children:[{type:c,tag:j,props:{className:[k,l]},children:[{type:c,tag:g,props:{},children:[{type:a,value:"nohup java -jar \\\n  -Dspring.config.location=classpath:\u002Fapplication.properties,\u002Fhome\u002Fec2-user\u002Fapp\u002Fapplication-oauth.properties \\\n  $REPOSITORY\u002F$JAR_NAME 2\u003E&1 &\n"}]}]}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"수정이 다 되었다면 다시 deploy.sh를 실행"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"그럼 정상적으로 실행 됨"}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:u,props:{id:"스프링-부트-프로젝트로-rds-접근하기"},children:[{type:c,tag:n,props:{ariaHidden:o,href:"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B6%80%ED%8A%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%A1%9C-rds-%EC%A0%91%EA%B7%BC%ED%95%98%EA%B8%B0",tabIndex:p},children:[{type:c,tag:q,props:{className:[r,s]},children:[]}]},{type:a,value:"스프링 부트 프로젝트로 RDS 접근하기"}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"RDS는 MariaDB를 사용 중입니다."}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"MariaDB에서 스프링부트 프로젝트를 실행하기 위해선 몇 가지 작업 필요"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"테이블 생성"}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"H2에서 자동 생성해주던 테이블들을 MariaDB에선 직접 쿼리를 이용해 생성"}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:C}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"자바 프로젝트가 MariaDB에 접근하려면 데이터베이스 드라이버가 필요"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"MariaDB에서 사용 가능한 드라이버를 프로젝트에 추가"}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"EC2 (리눅스 서버) 설정"}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"데이터베이스의 접속 정보는 공개되면 외부에서 데이터를 모두 가져갈 수 있기 때문에 중요하게 보호해야 할 정보임"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"프로젝트 안에 접속 정보를 갖고 있다면 깃허브와 같이 오픈된 공간에선 누구나 해킹할 위험이 있음"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"EC2 서버 내부에서 접속 정보를 관리하도록 설정"}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:m,props:{},children:[{type:a,value:"RDS 테이블 생성"}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"JPA가 사용될 엔티티 테이블과 스프링 세션이 사용될 테이블 2가지 종류 생성"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"JPA가 사용할 테이블은 테스트 코드 수행 시 로그로 생성되는 쿼리 사용"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"테스트 코드를 수행하면 다음과 같이 로그가 발생하니 create table부터 복사하여 RDS에 반영"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:h,props:{className:[i]},children:[{type:c,tag:j,props:{className:[k,l]},children:[{type:c,tag:g,props:{},children:[]}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"스프링 세션 테이블은 schema-mysql.sql 파일에서 확인\n"},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"File 검색(Ctrl + Shift + N)"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"해당 파일에는 다음과 같은 세션 테이블 확인 가능"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:h,props:{className:[i]},children:[{type:c,tag:j,props:{className:[k,l]},children:[{type:c,tag:g,props:{},children:[]}]}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"CREATE TABLE SPRING_SESSION (\nPRIMARY_ID CHAR(36) NOT NULL,\nSESSION_ID CHAR(36) NOT NULL,\nCREATION_TIME BIGINT NOT NULL,\nLAST_ACCESS_TIME BIGINT NOT NULL,\nMAX_INACTIVE_INTERVAL INT NOT NULL,\nEXPIRY_TIME BIGINT NOT NULL,\nPRINCIPAL_NAME VARCHAR(100),\nCONSTRAINT SPRING_SESSION_PK PRIMARY KEY (PRIMARY_ID)\n) ENGINE=InnoDB ROW_FORMAT=DYNAMIC;"}]},{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"CREATE UNIQUE INDEX SPRING_SESSION_IX1 ON SPRING_SESSION (SESSION_ID);\nCREATE INDEX SPRING_SESSION_IX2 ON SPRING_SESSION (EXPIRY_TIME);\nCREATE INDEX SPRING_SESSION_IX3 ON SPRING_SESSION (PRINCIPAL_NAME);"}]},{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"CREATE TABLE SPRING_SESSION_ATTRIBUTES (\nSESSION_PRIMARY_ID CHAR(36) NOT NULL,\nATTRIBUTE_NAME VARCHAR(200) NOT NULL,\nATTRIBUTE_BYTES BLOB NOT NULL,\nCONSTRAINT SPRING_SESSION_ATTRIBUTES_PK PRIMARY KEY (SESSION_PRIMARY_ID, ATTRIBUTE_NAME),\nCONSTRAINT SPRING_SESSION_ATTRIBUTES_FK FOREIGN KEY (SESSION_PRIMARY_ID) REFERENCES SPRING_SESSION(PRIMARY_ID) ON DELETE CASCADE\n) ENGINE=InnoDB ROW_FORMAT=DYNAMIC;\n```"}]},{type:a,value:b},{type:c,tag:h,props:{className:[i]},children:[{type:c,tag:j,props:{className:[k,l]},children:[{type:c,tag:g,props:{},children:[{type:a,value:"  * 복사하여 RDS에 반영\n"}]}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:m,props:{},children:[{type:a,value:C}]}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"MariaDB 드라이버를 pom.xml에 등록"}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:h,props:{className:[i]},children:[{type:c,tag:j,props:{className:[k,l]},children:[{type:c,tag:g,props:{},children:[{type:a,value:"\u003Cdependency\u003E\n  \u003CgroupId\u003Eorg.mariadb.jdbc\u003C\u002FgroupId\u003E\n  \u003CartifactId\u003Emariadb-java-client\u003C\u002FartifactId\u003E\n\u003C\u002Fdependency\u003E\n"}]}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"서버에서 구동될 환경을 하나 구성\n"},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"src\u002Fmain\u002Fresources\u002F에 application-real.properties 파일 추가"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"앞에서 이야기한 대로 application-real.properties로 파일을 만들면 profile=real인 환경이 구성된다고 보면 된다"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"실제 운영될 환경이기 때문에 보안\u002F로그상 이슈가 될 만한 설정들을 모두 제거하며 RDS 환경 profile 설정이 추가된다"}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:h,props:{className:[i]},children:[{type:c,tag:j,props:{className:[k,l]},children:[{type:c,tag:g,props:{},children:[{type:a,value:"spring.profiles.include=oauth, real-db\n\n# 쿼리 로그 세팅\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect\nspring.jpa.properties.hibernate.dialect.storage_engine=innodb\n\n# 세션 저장소 jdbc 설정\nspring.session.store-type=jdbc\nspring.session.jdbc.initialize-schema=always\n\n# UTF-8 세팅\nserver.servlet.encoding.charset=UTF-8\nserver.servlet.encoding.force=true\n"}]}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"모든 설정이 되었다면 깃허브로 푸시"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:m,props:{},children:[{type:a,value:"EC2 설정"}]}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"OAuth와 마찬가지로 RDS 접속 정보도 보호해야 할 정보이니 EC2 서버에 직접 설정 파일을 둔다"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"app 디렉토리에 application-real-db.properties 파일 생성"}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:h,props:{className:[i]},children:[{type:c,tag:j,props:{className:[k,l]},children:[{type:c,tag:g,props:{},children:[{type:a,value:"vim ~\u002Fapp\u002Fapplication-real-db.properties\n"}]}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"그리고 다음과 같은 내용 추가"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:h,props:{className:[i]},children:[{type:c,tag:j,props:{className:[k,l]},children:[{type:c,tag:g,props:{},children:[{type:a,value:"# 쿼리 로그 세팅\nspring.jpa.properties.hibernate.format_sql=true\nlogging.level.org.hibernate.SQL=debug\nlogging.level.org.hibernate.type=trace\n\n# DB 세팅\nspring.datasource.hikari.jdbc-url=jdbc:mariadb:\u002F\u002Frds주소:포트명(기본은 3306)\u002Fdatabase이름\nspring.datasource.hikari.username=db계정\nspring.datasource.hikari.password=db계정 비밀번호\nspring.datasource.hikari.driver-class-name=org.mariadb.jdbc.Driver\n\n# ddl-auto 세팅\nspring.jpa.hibernate.ddl-auto=none\n"}]}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"마지막으로 deploy.sh가 real profile을 쓸 수 있도록 다음과 같이 개선"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:h,props:{className:[i]},children:[{type:c,tag:j,props:{className:[k,l]},children:[{type:c,tag:g,props:{},children:[{type:a,value:"...\nnohup java -jar \\\n        -Dspring.config.location=classpath:\u002Fapplication.properties,\u002Fhome\u002Fec2-user\u002Fapp\u002Fapplication-oauth.properties,\u002Fhome\u002Fec2-user\u002Fapp\u002Fapplication-real-db.properties,classpath:\u002Fapplication-real.properties \\\n        -Dspring.profiles.active=real \\\n        $REPOSITORY\u002F$JAR_NAME 2\u003E&1 &\n"}]}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"이렇게 설정된 후 다시 한번 deploy.sh 실행\n"},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"nohup.out 파일을 열어 다음과 같이 로그가 보인다면 성공"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"curl 명령어로 html 코드가 정상적으로 보인다면 성공"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:c,tag:g,props:{},children:[{type:a,value:"curl localhost:8080"}]}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:u,props:{id:"ec2에서-소셜-로그인-하기"},children:[{type:c,tag:n,props:{ariaHidden:o,href:"#ec2%EC%97%90%EC%84%9C-%EC%86%8C%EC%85%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%ED%95%98%EA%B8%B0",tabIndex:p},children:[{type:c,tag:q,props:{className:[r,s]},children:[]}]},{type:a,value:"EC2에서 소셜 로그인 하기"}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"curl 명령어를 통해 EC2에 서비스가 잘 배포되었으니 브라우저에서도 확인 필요"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:m,props:{},children:[{type:a,value:"AWS 보안 그룹 변경"}]}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"EC2에 스프링 부트 프로젝트가 8080 포트로 배포되었으니, 8080 포트가 보안 그룹에 열려 있는지 확인"}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"8080이 열려 있다면 OK, 안 되어있다면 [Edit inbound rules] 버튼을 눌러 추가"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"사진 추가하기"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:m,props:{},children:[{type:a,value:"AWS EC2 도메인으로 접속"}]}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"왼쪽 사이드바의 [인스턴스] 메뉴를 클릭"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"본인이 생성한 EC2 인스턴스를 선택하면 다음과 같이 상세 정보에서 퍼블릭 DNS를 확인할 수 있음"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"인터넷이 되는 장소 어디나 퍼블릭 DNS를 입력하면 우리 EC2 서버에 접근 가능"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"다음으로 도메인 주소에 8080포트를 붙여 브라우저에 입력"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"결과사진 추가"}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"현재 상태에서는 해당 서비스에 EC2의 도메인을 등록하지 않았기 때문에 구글과 네이버 로그인이 작동하지 않음"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"따라서 구글, 네이버에 서비스 등록 필요"}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:m,props:{},children:[{type:a,value:D}]}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"구글 웹 콘솔로 접속하여 본인의 프로젝트로 이동한 다음 **[API 및 서비스 =\u003E 사용자 인증 정보]**로 이동"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:m,props:{},children:[{type:a,value:"[OAuth 등의 화면]"}]},{type:a,value:" 탭을 선택하고 아래에서 승인된 도메인에 'http:\u002F\u002F' 없이 EC2의 퍼블릭 DNS를 등록"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:m,props:{},children:[{type:a,value:"[사용자 인증 정보]"}]},{type:a,value:" 탭을 클릭해서 본인이 등록한 서비스의 이름 클릭"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"퍼블릭 DNS 주소에 :8080\u002Flogin\u002Foauth2\u002Fcode\u002Fgoogle 주소를 추가하여 승인된 리디렉션 URI에 등록"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"EC2 DNS 주소로 이동해서 다시 구글 로그인을 시도해 보면 로그인 성공"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:c,tag:m,props:{},children:[{type:a,value:D}]}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"네이버 개발자 센터로 접속해서 본인의 프로젝트로 이동"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"아래로 내려가 보면 PC 웹 항목이 있는데 여기서 서비스 URL과 Callback URL 2개를 수정"}]},{type:a,value:b},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"서비스 URL\n"},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"로그인을 시도하는 서비스가 네이버에 등록된 서비스인지 판단하기 위한 항목"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"8080 포트는 제외하고 실제 도메인 주소만 입력"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"네이버에서 아직 지원되지 않아 하나만 등록 가능"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"즉, EC2의 주소를 등록하면 localhost가 안 됨"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"개발 단계에서는 등록하지 않는 것을 추천"}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"localhost도 테스트하고 싶으면 네이버 서비스를 하나 더 생성해서 키를 발급받으면 됨"}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"Callback URL\n"},{type:c,tag:f,props:{},children:[{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:"전체 주소 등록(EC2 퍼블릭 DNS:8080\u002Flogin\u002Foauth2\u002Fcode\u002Fnaver)"}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"2개 항목을 모두 수정\u002F추가하였다면 구글과 마찬가지로 네이버 로그인 성공"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"구글과 네이버 로그인도 EC2와 연동 완료되었지만 현재 방식은 몇 가지 문제가 있음\n* 수동 실행되는 Test\n* 본인이 짠 코드가 다른 개발자의 코드에 영향을 끼치지 않는지 확인하기 위해 전체 테스트 필요\n* 현재 상태에선 항상 개발자가 작업을 진행할 때마다 수동으로 전체 테스트 필요\n* 수동 Build\n* 다른 사람이 작성한 브랜치와 본인이 작성한 브랜치가 합쳐졌을 때(Merge) 이상이 없는지는 Build 실행 필요\n* 이를 매번 개발자가 직접 실행해해야 함"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"그래서 다음 글에서는 이런 수동 Test & Build를 자동화시키는 작업을 진행 예정"}]},{type:a,value:b}]},{type:a,value:b},{type:c,tag:d,props:{},children:[{type:a,value:b},{type:c,tag:e,props:{},children:[{type:a,value:"깃허브에 푸시를 하면 자동으로 Test & Build & Deploy가 진행되도록 개선하는 작업임"}]},{type:a,value:b}]},{type:a,value:b}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002Fspring-study-week6",extension:".md",createdAt:"2022-01-27T08:34:33.000Z",updatedAt:"2022-03-10T05:16:13.000Z"},prev:{slug:"reactnative-study-week4",title:"Reactnative 스터디 4주차"},next:{slug:"spring-study-week7",title:"Travis CI 배포 자동화"},member:[{slug:"hwikyung",name:t,description:"중앙대학교 GDSC 멤버로 활동하고 있습니다. 백엔드 개발자를 목표로 공부하고 있습니다.",role:"Alumni(21-22 Member)",img:"hwikyung.jpg",dir:"\u002Fmembers",path:"\u002Fmembers\u002Fhwikyung",extension:".yaml",createdAt:"2021-11-26T09:28:42.000Z",updatedAt:"2022-10-26T12:57:45.000Z"}],authorName:t}],fetch:{},mutations:void 0}}("text","\n","element","li","p","ul","code","div","nuxt-content-highlight","pre","language-text","line-numbers","strong","a","true",-1,"span","icon","icon-link","hwikyung kim","h4","스프링-스터디-6주차챕터8","스프링 스터디 6주차(챕터8)","ec2에-프로젝트-clone-받기","EC2에 프로젝트 Clone 받기","깃허브에서 코드를 받아올 수 있게 EC2에 Git 설치","sudo yum install git","cd ~\u002Fapp\u002Fstep1","프로젝트 설정","구글에 EC2 주소 등록")));