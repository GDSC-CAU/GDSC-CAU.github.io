__NUXT_JSONP__("/articles/jpa-study-week1", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$){return {data:[{article:{slug:"jpa-study-week1",description:"Java와 Relational Database간의 통신 방법들을 알아보고 각 장단점을 알아봅니다.",title:"JDBC와 JPA",category:"Back-End",author:Z,featured:"none",toc:[{id:ah,depth:S,text:_},{id:ai,depth:S,text:aj},{id:ak,depth:L,text:al},{id:am,depth:L,text:an},{id:ao,depth:L,text:ap},{id:aq,depth:S,text:ar},{id:as,depth:L,text:at},{id:au,depth:L,text:av}],body:{type:"root",children:[{type:b,tag:aw,props:{id:"sql-based-connection"},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#sql-based-connection",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:"SQL Based Connection"}]},{type:a,value:f},{type:b,tag:$,props:{id:ah},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#jdbc",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:_}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:T,props:{},children:[{type:a,value:_}]},{type:a,value:"(Java Database Connectivity)는 Java에서 데이터베이스에 접속할 수 있도록 하는 Java API이다."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"각기 다른 데이터베이스들의 접속방법, 데이터를 처리하는 방법을 표준화된 방법으로 접속할 수 있도록 만든 API 규격이어서, 데이터베이스의 종류에 구애받지 않고 프로그램을 작성할 수 있다."}]},{type:a,value:f},{type:b,tag:E,props:{src:"https:\u002F\u002Ft1.daumcdn.net\u002Fcfile\u002Ftistory\u002F99CE49365AAE548609"},children:[]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Java로 작성한 애플리케이션은 Jdbc API를 사용해서 SQL을 DB에 전달하는데, 이러한 개발 방식은 많은 문제점을 야기했다."}]},{type:a,value:f},{type:b,tag:$,props:{id:ai},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#cons",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:aj}]},{type:a,value:f},{type:b,tag:U,props:{id:ak},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#%EB%B9%84%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%EB%B0%98%EB%B3%B5",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:al}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Jdbc를 사용하여 데이터를 가져오는 과정은 아래와 같다."}]},{type:a,value:f},{type:b,tag:P,props:{},children:[{type:a,value:f},{type:b,tag:G,props:{},children:[{type:a,value:"조회 SQL을 작성한다"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:H}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:ax}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:P,props:{start:S},children:[{type:a,value:f},{type:b,tag:G,props:{},children:[{type:a,value:"Jdbc API를 사용하여 SQL을 실행한다"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:"ResultSet"}]},{type:a,value:" rs "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:" stmt"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"executeQuery"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:P,props:{start:L},children:[{type:a,value:f},{type:b,tag:G,props:{},children:[{type:a,value:"조회 결과를 Member 객체로 매핑한다."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:H}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:"\"MEMBER_ID\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:H}]},{type:a,value:" name "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:az},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aA}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:"\"NAME\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:aa}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"setMemberId"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:aB},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:a,value:"setName "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"name"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"데이터를 삽입하는 과정은 아래와 같다."}]},{type:a,value:f},{type:b,tag:P,props:{},children:[{type:a,value:f},{type:b,tag:G,props:{},children:[{type:a,value:"삽입 SQL을 작성한다"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:H}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:"\"INSERT INTO MEMBER (MEMBER_ID, NAME) VALUES (?,?)\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:P,props:{start:S},children:[{type:a,value:f},{type:b,tag:G,props:{},children:[{type:a,value:"Member 객체에서 값을 꺼내어 전달한다"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,aE]},children:[{type:a,value:"1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:J}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"getMemberId"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"\npstmt"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aD}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,aE]},children:[{type:a,value:"2"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:J}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"getName"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:P,props:{start:L},children:[{type:a,value:f},{type:b,tag:G,props:{},children:[{type:a,value:"SQL을 실행한다"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:a,value:aC},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"executeUpdate"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ay},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"위와 같은 방식으로 Java와 RDB 사이의 변환 코드를 작성해 주어야 한다."}]},{type:a,value:f},{type:b,tag:E,props:{src:"https:\u002F\u002Fimg1.daumcdn.net\u002Fthumb\u002FR1280x0\u002F?scode=mtistory2&fname=https%3A%2F%2Ft1.daumcdn.net%2Fcfile%2Ftistory%2F9929BA3F5AAE560321"},children:[]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"문제는 객체를 DB에 CRUD하려면 너무나도 많은 SQL과 Jdbc API를 작성해주어야 하고, 테이블이 추가될때마다 같은 일을 반복해야만 한다."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"서비스 로직을 생각하기도 바쁜 개발자들에게, 이런 단순하고 많은 작업은 큰 문제점으로 여겨져왔다."}]},{type:a,value:f},{type:b,tag:U,props:{id:am},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#sql-reliance",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:an}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"기존 Table에서 Attribute가 추가될 때마다, 코드에 하드코딩으로 작성되어 있던 SQL문을 일일이 찾아가며 수정\n해주어야 한다."}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:H}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:ax}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"위의 MEMBER table에서 만약 GENDER라는 Attribute가 추가되었다면? SQL을 아래와 같이 수정해 주어야 정상적으로 작동할 수 있다."}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:H}]},{type:a,value:X},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:"\"SELECT MEMBER_ID, NAME, GENDER FROM MEMBER M WHERE MEMBER_ID = ?\""}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"이는 SQL에 의존적인 개발을 야기할 수밖에 없다."}]},{type:a,value:f},{type:b,tag:U,props:{id:ao},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#paradigm-%EB%B6%88%EC%9D%BC%EC%B9%98",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:ap}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Java는 객체지향언어의 대표적인 예시이다. 대부분의 데이터들은 Object로 처리되고, Abstraction \u002F Inheritance \u002F Polymorphism의 특성을 지니고 있다."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"문제는, RDB는 데이터 중심으로 구조화 되어있어, 객체지향의 특성을 반영하지 않는다."}]},{type:a,value:f},{type:b,tag:K,props:{id:"inheritance"},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#inheritance",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:"Inheritance"}]},{type:a,value:f},{type:b,tag:E,props:{src:aF},children:[]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"RDB에서 상속과 유사한 형태로 Table을 설계하기 위해서는 우측 ERD와 같은 방법을 사용하여야 한다. "},{type:b,tag:T,props:{},children:[{type:a,value:"DTYPE"}]},{type:a,value:"에 해당 ITEM이 ALBUM인지, MOVIE인지, BOOK인지 명시하여야 한다."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"이런 구조에서 Jdbc API를 사용하여 ALBUM 데이터를 조회하려면, ITEM과 ALBUM을 JOIN하는 SQL을 작성해야 한다. 안그래도 관리하기 힘든 SQL을 더 복잡하게 만드는 요소이다."}]},{type:a,value:f},{type:b,tag:K,props:{id:"object-relation"},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#object-relation",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:aG}]},{type:a,value:f},{type:b,tag:E,props:{src:aH},children:[]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Member의 Team name을 가져오기 위해 Object에서는 "},{type:b,tag:k,props:{},children:[{type:a,value:"member.getTeam().getName()"}]},{type:a,value:"로, RDB에서는 "},{type:b,tag:k,props:{},children:[{type:a,value:"SELECT * FROM MEMBER JOIN TEAM ON ... WHERE ID = ..."}]},{type:a,value:"처럼 FK를 통한 JOIN을 통해 가져올 수 있다."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"역방향일 경우에는 어떨까? Object는 단방향이기 때문에 team.getMember()가 불가능하다. RDB는 JOIN의 방향성이 없기 때문에 가능하다."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"즉, Object는 Relation을 위해 참조가 필요한 반면, RDB는 FK가 필요하다."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"이런 Paradigm 불일치를 해소시키기 위해, 아래와 같은 추가적인 Logic이 필수적이다."}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:b,tag:c,props:{className:[d,"doc-comment",C]},children:[{type:a,value:"\u002F**\n    RDB에서 Object로 변환하여 조회하는 과정\n*\u002F"}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\u002F\u002F JOIN을 통한 SQL로 데이터 불러오기"}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:aa}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\u002F\u002F 데이터베이스에서 조회환 회원 관련 정보를 모두 입력"}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aI}]},{type:a,value:" team "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:aa}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aI}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\u002F\u002F 데이터베이스에서 조회한 팀 관련 정보를 모두 입력"}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\u002F\u002F 회원과 팀 관계 설정"}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"setTeam"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:"team"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:"return"}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:K,props:{id:"object-relation-search"},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#object-relation-search",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:aJ}]},{type:a,value:f},{type:b,tag:E,props:{src:aK},children:[]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"위와 같이 Relation이 구성된 상황에서는, Object의 경우 아래와 같이 연속되는 탐색이 가능하다."}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:a,value:ac},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aL}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"getOrderItem"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"getItem"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"반면 RDB의 경우, 연속적이고 명시적인 JOIN이 필수적이다"}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,aM]},children:[{type:b,tag:k,props:{},children:[{type:a,value:"SELECT * FROM MEMBER LEFT JOIN ORDER ON ... LEFT JOIN ORDER_ITEM ON ... LEFT JOIN ITEM ON ... WHERE ..\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"각기 다른 상황마다 탐색하는 범위도 달라지는데, 그에 따른 각기 다른 JOIN문을 작성하고 Logic을 만들기에는 너무나 수고스러운 일이다."}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:a,value:ac},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\u002F\u002Fmember만 조회"}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"getMemeberWithTeam"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\u002F\u002F join Member, Team"}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"getMemeberWithOrder"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\u002F\u002F join Member, Order"}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"getMemeberWithOrderWithDelivery"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\u002F\u002Fjoin Member,Order,Delivery"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:K,props:{id:"equality"},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#equality",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:aN}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:H}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:aO}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:aQ},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:ad}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ab},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ae}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\u002F\u002F false"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"RDB 입장에서는 같은 memberId로 조회했기에 member1과 member2는 같은 객체여야 하지만, Java에서는 그렇지 않다. "},{type:b,tag:k,props:{},children:[{type:a,value:"getMember()"}]},{type:a,value:" 함수에서는 "},{type:b,tag:k,props:{},children:[{type:a,value:"new Member()"}]},{type:a,value:" 생성자로 Instance를 생성하기 때문에, 위 코드는 false를 출력한다."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"이를 해결하기 위해서는 Member의 "},{type:b,tag:k,props:{},children:[{type:a,value:aV}]},{type:a,value:"를 override하여 별도의 동등성 비교 로직을 짜고, "},{type:b,tag:k,props:{},children:[{type:a,value:ae}]},{type:a,value:" 연산자가 아닌 "},{type:b,tag:k,props:{},children:[{type:a,value:aV}]},{type:a,value:"를 사용해야 할 것이다."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Object Model과 RDB Model은 위와 같이 지향하는 Paradigm이 서로 다르다. 이 점을 극복하기 위해서는 별도의 Logic이 필수불가결하며, 이는 개발자의 반복적이고 소모적인 작업을 요한다."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"이러한 문제점을 해결하기 위해 등장한것이 바로 JPA이다."}]},{type:a,value:f},{type:b,tag:aw,props:{id:aW},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#jpa",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:aX}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:T,props:{},children:[{type:a,value:aX}]},{type:a,value:"(Java Persistence API)는 Java ORM 기술에 대한 API 표준 명세이다."}]},{type:a,value:f},{type:b,tag:aY,props:{},children:[{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:T,props:{},children:[{type:a,value:"ORM"}]},{type:a,value:"(Object Relational Mapping)"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"Object와 RDB를 Mapping하는 것\n위에서 언급했던 Paradigm의 불일치를 해소시켜 줌"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"즉, Interface를 모아둔 표준 API에 불구하다. 따라서 JPA를 사용하기 위해서는 이를 구현한 ORM Framework를 선택해야 한다. 그 중 가장 대중적인 Framework는 "},{type:b,tag:T,props:{},children:[{type:a,value:"Hibernate"}]},{type:a,value:"이다."}]},{type:a,value:f},{type:b,tag:E,props:{src:"https:\u002F\u002Fpbs.twimg.com\u002Fmedia\u002FFP5_mvtXMAk3x1C.png"},children:[]},{type:a,value:f},{type:b,tag:$,props:{id:aq},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#pros",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:ar}]},{type:a,value:f},{type:b,tag:U,props:{id:as},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#sql-independent",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:at}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"JPA를 사용하게 된다면 Object와 RDB를 다룰 때, 개발자가 직접 SQL을 작성하는 것이 아닌, JPA에서 제공하는 API를 사용하게 된다. 그러면 JPA가 적절한 SQL을 생성하여 RDB에 쿼리를 전송하고, 결과값을 알아서 Object로 Mapping해주게 된다."}]},{type:a,value:f},{type:b,tag:af,props:{},children:[{type:a,value:f},{type:b,tag:G,props:{},children:[{type:a,value:"INSERT"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:a,value:aW},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"persist"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:ac},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:k,props:{},children:[{type:a,value:"persist()"}]},{type:a,value:" 메소드는 객체를 데이터베이스에 저장한다. 이 메소드를 호출하면 JPA가 객체와 매핑정보를 보고 적절한 INSERT SOL을 생성하여 DB에 전달한다."}]},{type:a,value:f},{type:b,tag:af,props:{},children:[{type:a,value:f},{type:b,tag:G,props:{},children:[{type:a,value:"SELECT"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:H}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:"\"4191\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:J}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:k,props:{},children:[{type:a,value:ag}]},{type:a,value:" 메소드는 객체 하나를 데이터베이스에서 조회한다. JPA는 객체와 매핑정보를 보고 적절한 SELECT SQL을 생성해서 데이터베이스에 전달하고 그 결과로 Member 객체를 생성해서 반환한다."}]},{type:a,value:f},{type:b,tag:af,props:{},children:[{type:a,value:f},{type:b,tag:G,props:{},children:[{type:a,value:"UPDATE"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:J}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"setName"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:"\"lee\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"JPA는 별도의 수정 메소드를 제공하지 않는다. 대신에 객체를 조회해서 값을 변경만 하면 트랜잭션을 커밋할 때 데이터베이스에 적절한 UPDATE SQL이 전달된다."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"이로 인해 생산성이 증가하고, 유지보수가 용이해지는 이점을 가져올 수 있다."}]},{type:a,value:f},{type:b,tag:U,props:{id:au},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#paradigm-%EB%B6%88%EC%9D%BC%EC%B9%98-%ED%95%B4%EC%86%8C",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:av}]},{type:a,value:f},{type:b,tag:K,props:{id:"inheritence"},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#inheritence",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:"Inheritence"}]},{type:a,value:f},{type:b,tag:E,props:{src:aF},children:[]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aZ}]},{type:a,value:" album "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:aZ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:J}]},{type:a,value:" albumId"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"위와 같이 "},{type:b,tag:k,props:{},children:[{type:a,value:ag}]},{type:a,value:"함수를 작성하면, JPA에서는 아래와 같은 SQL문을 생성한다."}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,aM]},children:[{type:b,tag:k,props:{},children:[{type:a,value:"SELECT I.*, A.* FROM ITEM I JOIN ALBUM A ON I.ITEM_ID = A.ITEM_ID\n"}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"상속관계를 구현하기 위해 필요했던 부가적인 SQL을 더이상 작성하지 않아도 된다!"}]},{type:a,value:f},{type:b,tag:K,props:{id:"object-relation-1"},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#object-relation-1",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:aG}]},{type:a,value:f},{type:b,tag:E,props:{src:aH},children:[]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:J}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:R},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"getTeam"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"별도의 JOIN SQL이 필요 없다. JPA에서 FK를 읽어 참조 형식을 변환해 준다."}]},{type:a,value:f},{type:b,tag:K,props:{id:"object-relation-search-1"},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#object-relation-search-1",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:aJ}]},{type:a,value:f},{type:b,tag:E,props:{src:aK},children:[]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:J}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:"Order"}]},{type:a,value:" order "},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:V},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aL}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\u002F\u002F getOrderDate()를 실행할 때 SELECT ORDER SQL을 실행하여 조회"}]},{type:a,value:"\norder"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:"getOrderDate"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"JPA는 연관된 객체를 사용하는 시점에 SQL을 실행한다. 이 기능은 실제 객체를 사용하는 시점까지 DB 조회를 미룬다 해서 지연 로딩이라고도 부른다."}]},{type:a,value:f},{type:b,tag:K,props:{id:"equality-1"},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#equality-1",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:aN}]},{type:a,value:f},{type:b,tag:q,props:{className:[r]},children:[{type:b,tag:s,props:{className:[t,z]},children:[{type:b,tag:k,props:{},children:[{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:H}]},{type:a,value:Y},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,F]},children:[{type:a,value:aO}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:a,value:aP},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:J}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:p}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:N}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:b,tag:c,props:{className:[d,m]},children:[{type:a,value:B}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:h}]},{type:b,tag:c,props:{className:[d,D]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:J}]},{type:a,value:W},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,n]},children:[{type:a,value:aS}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:i}]},{type:a,value:aT},{type:b,tag:c,props:{className:[d,o]},children:[{type:a,value:ae}]},{type:a,value:aU},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,C]},children:[{type:a,value:"\u002F\u002F true"}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"JPA는 같은 트랜잭션일 경우 같은 객체가 조회되는 것을 보장한다."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"또한 "},{type:b,tag:k,props:{},children:[{type:a,value:"member2"}]},{type:a,value:"를 초기화하는 과정에서는 "},{type:b,tag:k,props:{},children:[{type:a,value:ag}]},{type:a,value:"를 실행하지 않고 "},{type:b,tag:k,props:{},children:[{type:a,value:"member1"}]},{type:a,value:"을 초기화하는 과정에 조회한 객체를 재사용하여 성능상에도 이점을 가져온다."}]},{type:a,value:f},{type:b,tag:K,props:{id:"db-vendor-dependent"},children:[{type:b,tag:u,props:{ariaHidden:v,href:"#db-vendor-dependent",tabIndex:w},children:[{type:b,tag:c,props:{className:[x,y]},children:[]}]},{type:a,value:"DB Vendor Dependent"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"같은 RDB여도 각 Vendor마다 사용하는 Query, 혹은 사용법이 다른 경우가 많다. 단적인 예로 Paging 처리는 각 RDB마다 달라서 사용법을 다르게 익혀야 한다.\n이는 처음 선택한 DB에 종속되게 만들어 다른 DB로 이동하기 어렵게 한다."}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"JPA는 아래와 같이 접근 계층을 제공하여 Application이 특정 DB에 종속되지 않도록 한다. 사실 JDBC 또한 마찬가지이지 않을까?"}]},{type:a,value:f},{type:b,tag:E,props:{src:"https:\u002F\u002Fvelog.velcdn.com\u002Fimages%2Fyu-jin-song%2Fpost%2Fdcaeda65-3fed-4973-bf89-73e1274b85f3%2F벤더_독립성.png"},children:[]},{type:a,value:f},{type:b,tag:aY,props:{},children:[{type:a,value:f},{type:b,tag:g,props:{},children:[{type:a,value:"참고문헌"}]},{type:a,value:f},{type:b,tag:g,props:{},children:[{type:b,tag:"em",props:{},children:[{type:a,value:"김영한, 자바 ORM 표준 JPA 프로그래밍(에이콘출판, 2015)"}]}]},{type:a,value:f}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002Fjpa-study-week1",extension:".md",createdAt:a_,updatedAt:a_},prev:{slug:"data-study-week-6-Similarity",title:"문서의 유사도 (2)"},next:null,member:[{slug:"myungseung",name:Z,description:"중앙대학교 GDSC 2기 코어멤버로 활동하고 있습니다. 현재는 Spring Boot를 공부하고 있습니다.",role:"Core Member",img:"myungseung.jpg",dir:"\u002Fmembers",path:"\u002Fmembers\u002Fmyungseung",extension:".yaml",createdAt:a$,updatedAt:a$}],authorName:Z}],fetch:{},mutations:void 0}}("text","element","span","token","punctuation","\n","p",".","(",")","code",";","class-name","function","operator","=","div","nuxt-content-highlight","pre","line-numbers","a","true",-1,"icon","icon-link","language-java"," ","Member","comment","keyword","img","string","li","String","\n\n",",","h4",3," jpa","find","class","ol"," member ","\nmember",2,"strong","h3"," member"," memberId"," sql "," memberId ","Myungseung Kim","JDBC","h2","new","memberId","member","getMemeber","==","ul","find()","jdbc","cons","Cons","비효율적인-반복","비효율적인 반복","sql-reliance","SQL Reliance","paradigm-불일치","Paradigm 불일치","pros","Pros","sql-independent","SQL Independent","paradigm-불일치-해소","Paradigm 불일치 해소","h1","\"SELECT MEMBER_ID, NAME FROM MEMBER M WHERE MEMBER_ID = ?\"","sql"," rs","getString","\n\nmember","pstmt","setString","number","https:\u002F\u002Ft1.daumcdn.net\u002Fcfile\u002Ftistory\u002F998885466072C07C1A?original","Object Relation","https:\u002F\u002Ft1.daumcdn.net\u002Fcfile\u002Ftistory\u002F99D57D376072C07C17?original","Team","Object Relation Search","https:\u002F\u002Ft1.daumcdn.net\u002Fcfile\u002Ftistory\u002F99C22D336072C07C19?original","getOrder","language-text","Equality","\"100\""," member1 "," memberDAO"," member2 ","print","member1 "," member2","equals()","jpa","JPA","blockquote","Album","2022-11-03T07:06:37.000Z","2022-10-27T12:02:12.000Z")));