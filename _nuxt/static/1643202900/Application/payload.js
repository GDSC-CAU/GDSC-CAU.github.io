__NUXT_JSONP__("/Application", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW,aX,aY,aZ,a_,a$,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,bA,bB,bC,bD,bE,bF,bG,bH,bI,bJ,bK,bL,bM,bN,bO,bP,bQ,bR,bS,bT,bU,bV,bW,bX,bY,bZ,b_,b$,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,cA,cB,cC){return {data:[{articles:[{slug:"flutter-study-week6",description:"Flutter 스터디 6주차에 대한 내용입니다.",title:"Flutter 스터디 6주차",category:aa,author:aD,toc:[{id:ba,depth:C,text:aE},{id:bb,depth:C,text:aF},{id:bc,depth:C,text:aG},{id:bd,depth:C,text:aH},{id:be,depth:C,text:aI}],body:{type:ab,children:[{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:h,props:{href:am,rel:[U,V,W],target:X},children:[{type:a,value:an}]},{type:a,value:" section 13 까지 본 뒤 진행한 스터디 입니다."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:v,props:{id:ah},children:[{type:b,tag:h,props:{href:ai,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aj}]},{type:a,value:c},{type:b,tag:P,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:v,props:{id:"future-async-await"},children:[{type:b,tag:h,props:{href:"#future-async-await",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"Future, async, await"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:aE}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:aF}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:P,props:{start:ao},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:v,props:{id:"exception-handling"},children:[{type:b,tag:h,props:{href:"#exception-handling",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"Exception handling"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:aG}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:P,props:{start:C},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:bf,props:{id:bg},children:[{type:b,tag:h,props:{href:bh,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:bi}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:aH}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:aI}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:K,props:{id:"1-future-async-await"},children:[{type:b,tag:h,props:{href:"#1-future-async-await",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"1. Future, async, await"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:as,src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F150915534-67e86751-295b-4509-b399-48569c890d5e.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Dart와 같은 객체지향언어는 우리의 일상생활을 그대로 재현하기 위해 만들어진 언어입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그렇기에 여러 문법들이 있는데,\r\nFuture, async, await는 Dart의 Asynchronous한 상황을 만들어주는 도구들입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"기본적으로 Dart는 Synchronous하게 작동합니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"void performTask() {\n    task1();\n    task2();\n    task3();\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"즉 위의 상황에서는 task1(), task2(), task3() 순서대로 함수가 실행이 됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그런데 만약 비동기적인 상황에서는 어떻게 코딩해줘야 할까요?"}]},{type:a,value:c},{type:b,tag:D,props:{id:ba},children:[{type:b,tag:h,props:{href:"#future-class",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aE}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"상세 예제 코드입니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"import 'dart:io';\n\nvoid main() {\n  performTask();\n}\n\nvoid performTask()  {\n  task1();\n  task2();\n  task3();\n}\n\nvoid task1() {\n  String result = 'task 1 data';\n  print('Task 1 complete');\n}\n\nvoid task2() {\n  String result = 'task 2 data';\n  print('Task 2 complete');\n}\n\nvoid task3() {\n  String result = 'task 3 data';\n  print('Task 3 complete');\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"만약에 task2를 실행하는데 3초라는 시간이 걸리면 어떻게 될까요?"}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"void task2() {\n  Duration threeSeconds = Duration(seconds: 3);\n  sleep(threeSeconds);\n  String result = 'task 2 data';\n  print('Task 2 complete');\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그럼 task1이 먼저 재빠르게 실행되고, (Task 1 complete 출력)\r\n바로 task2가 실행이 되겠지만 3초 뒤에 'Task 2 complete'이 출력이됩니다.\r\n이에 따라 task3도 늦게 실행이 되죠."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"지금은 코드가 짧아서 괜찮지만, 코드가 늘어나면 저 task2() 때문에 뒤에 오는 모든 코드들이 늦게 실행됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"우리는 이걸 방지하기 위해 Future라는 class를 사용합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Future은 일종의 영수증입니다.\r\n우리는 햄버거 가게에서 결제를 하자마자 햄버거를 받지 않고 영수증을 받습니다.\r\n하지만 우리는 좀 있으면 햄버거가 나온다는 것을 알죠.\r\n"},{type:b,tag:u,props:{alt:as,src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F150915810-7309c149-c12d-4ccb-91ce-18337a67a48b.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Future도 마찬가지로 이후에,\r\nString이든, int든 어떠한 return 값을 받기로 한 일종의 약속입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:as,src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F150915863-bc032df3-0ea0-4437-95e7-302268b19419.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그럼 다시 코드로 돌아와서,\r\ntask2의 delay를 비동기적으로 작동하게 하려면 아래와 같이 수정할 수 있습니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"void task2() {\n  Duration threeSeconds = Duration(seconds: 3);\n  Future.delayed(\n    threeSeconds,\n    () {\n      String result = 'task 2 data';\n      print('Task 2 complete');\n    },\n  );\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이렇게 되면 task1이 가장 먼저 실행되고, task2가 3초 기다리는 동안\r\ntask3는 눈치보지 말고 바로 실행이됩니다.\r\n그리고 delay가 지나면 task2의 실행값이 나오게되죠."}]},{type:a,value:c},{type:b,tag:D,props:{id:bb},children:[{type:b,tag:h,props:{href:"#async-await-keyword",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aF}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그런데 task2의 결과물을 받아서 task3가 작동하게 될 경우에는 어떻게 해야할까요?\r\n코드를 아래와 같이 바꿔줘보겠습니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"import 'dart:io';\n\nvoid main() {\n  performTask();\n}\n\nvoid performTask() {\n  task1();\n  String task2Result = task2();\n  task3(task2Result);\n}\n\nvoid task1() {\n  String result = 'task 1 data';\n  print('Task 1 complete');\n}\n\nString task2() {\n  Duration threeSeconds = Duration(seconds: 3);\n  String result = 'unprocessed data';\n  Future.delayed(\n    threeSeconds,\n    () {\n      result = 'task 2 data';\n      print('Task 2 complete');\n    },\n  );\n  return result;\n}\n\nvoid task3(task2Data) {\n  String result = 'task 3 data';\n  print('Task 3 complete with $task2Data');\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"task2는 String값인 result를 return하고 있고,\r\n이를 받아서 task3가 작동합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이 코드를 실행하게 되면 최종적으로,\r\n'Task 3 complete with unprocessed data' 라는 문구가 출력이 되는데,"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"우리는 task3()가 task2()가 실행될 때까지 기다렸다가, result의 값이 바뀐 후에 전달받아,\r\n'Task 3 complete with Task 2 complete' 라는 문구를 출력시키고 싶습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이를 위해서는 await라는 키워드를 Future.delay 앞에 붙여줘서 delay함수가 작동할 때까지\r\n기다려야한다는안내를 해줘야합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"또한 await라는 키워드는 async 키워드 안에서만 작동하기 때문에\r\n{} 앞에 async를 붙여줘야합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그리고 task2() 앞에 Future class로 바꿔줌으로써,\r\n3초뒤, String값을 return할 것을 알려야합니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"Future\u003CString\u003E task2() async {\n  Duration threeSeconds = Duration(seconds: 3);\n  String result = 'unprocessed data';\n  await Future.delayed(\n    threeSeconds,\n    () {\n      result = 'task 2 data';\n      print('Task 2 complete');\n    },\n  );\n  return result;\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이 와 같은 논리와 방식으로,\r\nperformTask() 함수도 수정을 하면 전체 수정 코드는 아래와 같습니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"import 'dart:io';\n\nvoid main() {\n  performTask();\n}\n\nvoid performTask() async {\n  task1();\n  String task2Result = await task2();\n  task3(task2Result);\n}\n\nvoid task1() {\n  String result = 'task 1 data';\n  print('Task 1 complete');\n}\n\nFuture\u003CString\u003E task2() async {\n  Duration threeSeconds = Duration(seconds: 3);\n  String result = 'unprocessed data';\n  await Future.delayed(\n    threeSeconds,\n    () {\n      result = 'task 2 data';\n      print('Task 2 complete');\n    },\n  );\n  return result;\n}\n\nvoid task3(task2Data) {\n  String result = 'task 3 data';\n  print('Task 3 complete with $task2Data');\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그럼 실행 화면은 아래와 같이 나옵니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:as,src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F150916143-fafffde0-8257-4969-9f8a-db018657ec53.png"},children:[]}]},{type:a,value:c},{type:b,tag:K,props:{id:"2-exception-handling"},children:[{type:b,tag:h,props:{href:"#2-exception-handling",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"2. Exception handling"}]},{type:a,value:c},{type:b,tag:D,props:{id:bc},children:[{type:b,tag:h,props:{href:"#try-catch",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aG}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Dart에서도 타 언어와 마찬가지로 예외처리를 해줘야합니다.\r\ntry, catch 혹은 try, on, catch와 같은 구조로 사용되며,\r\nSection 13에는 아래와 같은 예제와 함께 사용됐습니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"String myMargin = ‘abc’;\ndouble myMarginAsDouble;\n\ntry {\n    myMarginAsDouble = double.parse(myMargin);\n}\ncatch (e) {\n    print(e);\n}\n\nreturn Scaffold(\n    body: Container(\n    margin: EdgeInsets.all(myMarginAsDouble ?? 30.0),\n    ),\n);\n"}]}]}]},{type:a,value:c},{type:b,tag:K,props:{id:bj},children:[{type:b,tag:h,props:{href:bk,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:bl}]},{type:a,value:c},{type:b,tag:D,props:{id:bd},children:[{type:b,tag:h,props:{href:"#geolocator-package",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aH}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Section 13에서는 geolocator package를 기반으로 한 위치별 현재 날씨 API를 가져와 보여줬습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"정확한 위치가 아닌 어느정도 오차가 있는 위치 정보가 필요했기 때문에 아래와 같이 코드를 작성해줬습니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"Geolocator().getCurrentPosition(desiredAccuracy: LocationAccuracy.low);\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"코드 후반에 작성된 low 이외 high, best 등에 따라 위치 정확도가 달라지고 또한 기기의 배터리 사용량도 달라진다고 합니다."}]},{type:a,value:c},{type:b,tag:D,props:{id:be},children:[{type:b,tag:h,props:{href:"#json-converting",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aI}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"날씨 API를 가져올 때 json 형식의 파일로부터 data를 추출했는데 이 과정에서\r\ndart:convert package를 사용했습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"data 접근 방식은 dictionary에 접근하는 방식과 유사하게 아래 코드와 같이 작성됐습니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"var longitude = jsonDecode(data)[‘word’][‘lon’];\n"}]}]}]}]},dir:ac,path:"\u002Fblog\u002Fflutter-study-week6",extension:ad,createdAt:bm,updatedAt:bm},{slug:"flutter-study-week5",description:"Flutter 스터디 5주차에 대한 내용입니다.",title:"Flutter 스터디 5주차 (Widget Refactoring)",category:aa,author:bn,toc:[{id:bo,depth:C,text:bp},{id:bq,depth:C,text:aJ},{id:at,depth:C,text:ag},{id:aK,depth:C,text:ag},{id:aL,depth:C,text:ag}],body:{type:ab,children:[{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:h,props:{href:am,rel:[U,V,W],target:X},children:[{type:a,value:an}]},{type:a,value:" section 12를 본 뒤 진행한 스터디 입니다."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:D,props:{id:bo},children:[{type:b,tag:h,props:{href:"#flutter-%EC%8A%A4%ED%84%B0%EB%94%94-5%EC%A3%BC%EC%B0%A8---widget-refactoring",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:bp}]},{type:a,value:c},{type:b,tag:K,props:{id:ag},children:[]},{type:a,value:c},{type:b,tag:v,props:{id:ah},children:[{type:b,tag:h,props:{href:ai,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aj}]},{type:a,value:c},{type:b,tag:P,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:v,props:{id:"길이가-긴-위젯은-어떻게-리팩토링-해야할까"},children:[{type:b,tag:h,props:{href:"#%EA%B8%B8%EC%9D%B4%EA%B0%80-%EA%B8%B4-%EC%9C%84%EC%A0%AF%EC%9D%80-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81-%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aJ}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"페이스북 페이지를 리팩토링 하는 방법"}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"리팩토링의 안티패턴"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:K,props:{id:au},children:[{type:b,tag:h,props:{href:av,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]}]},{type:a,value:c},{type:b,tag:D,props:{id:bq},children:[{type:b,tag:h,props:{href:"#%EA%B8%B8%EC%9D%B4%EA%B0%80-%EA%B8%B4-%EC%9C%84%EC%A0%AF%EC%9D%80-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81-%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C-1",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aJ}]},{type:a,value:c},{type:b,tag:D,props:{id:at},children:[{type:b,tag:h,props:{href:aM,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"facebook",src:"\u002Fflutter-study-week5\u002Ffacebook.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"위의 페이스북 뉴스피드와 같이 한 화면에 여러 기능을 하는 위젯이 여러개 있는 경우,\n한 위젯만으로는 관리하기가 매우 힘듭니다. 엄청난 양의 코드와 수십개의 위젯이 한 파일 안에\n있게 되겠죠."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"위젯을 리팩토링 할 때는 가장 먼저 분리할 위젯의 영역을 정해야 합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"위 페이스북 예시 같은 경우에는 appbar, tapbar, 뉴스피드 리스트, 버튼 리스트로 나눌 수 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"각 영역은 새로운 위젯 또는 메소드로 분리할 수 있습니다.\n가장 쉬운 접근 방법은 각 영역을 메소드로 분리하는 방법입니다.\n메소드를 많이 사용하지 않고 복잡한 페이지를 완성하면 수정하려고 할 때 위젯들이\n너무 많아서 가독성이 떨어집니다. 그리서 최대한 짧은 코드를 지향하고 위젯을 영역별로 분리하는 것을 자주 사용하게 됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"자주 볼 수 있는 형태는 다음과 같습니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"\u002F\u002F 일반적인 페이지\n@override\nWidget build(BuildContext context){\n  return Scaffold(\n    appBar: AppBar(...)\n    body: Container(\n      child: Column(\n        children:[...],\n      ),\n    );\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"여기서 AppBar에도 버튼과 기능이 많이 들어가고 body에도 수백 줄을 넘길 수 있기 때문에\n코드가 긴 위젯을 분리하고 싶은 욕구가 생길 것입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"메소드로 분리를 해보면,"}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"\u002F\u002F 분리 후\n@override\nWidget build(BuildContext context){\n  return Scaffold(\n    appBar: _buildAppBar(),\n    body: _buildBody(),\n  );\n}\n\n_buildAppBar(){\n  return ...;\n}\n\n_buildBody(){\n  return ...;\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"위와 같이 되는데요, 메소드가 깔끔히 정리되어 좋아 보입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"하지만 이렇게 위젯을 메소드로 호출하여 분리하는 것은 안티패턴으로 바람직하지 않습니다.\n안티패턴은 습관적으로 많이 사용하는 패턴이지만 성능, 디버깅, 유지보수, 가독성 측면에서 부정적인 영향을 줄 수 있어\n지양하는 패턴을 뜻합니다."}]},{type:a,value:c},{type:b,tag:D,props:{id:aK},children:[{type:b,tag:h,props:{href:br,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"###*그렇다면 왜 메소드로 리팩토링하는 것이 안티패턴일까요?"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"메소드로 리팩토링을 하면 아무 의미 없는 빌드를 반복해서 호출하기 때문입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"antipattern",src:"\u002Fflutter-study-week5\u002Fantipattern.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"위 3개의 위젯을 3가지 방법으로 만들었습니다."}]},{type:a,value:c},{type:b,tag:P,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"const + StatelessWidget"}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"StatelessWidget"}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"Method"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"각 위젯을 만드는 코드의 부분입니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"body: Center(\n  child: Column(\n    mainAxisAlignment: MainAxisAlignment.center,\n    children: \u003CWidget\u003E[\n      const CounterInformationText(text: 'I am const Stateless Widget:'),\n      CounterInformationText(text: 'I am Stateless Widget'),\n      _buildCounterInfomationText(text: 'I am Method'),\n      Text('You have pushed the button this many times:'),\n      Text(\n        '$_counter',\n        style: Theme.of(context).textTheme.display1,\n      ),\n    ],\n  ),\n),\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"const 키워드가 붙은 것과 안붙은 StatelessWidget 두개를 만들었고,"}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"_buildCounterInfomationText({String text}) {\n  debugPrint('$text, ${this.hashCode}');\n  return Text(text, style: textStyle);\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"메소드로 한 위젯을 그렸습니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"class CounterInformationText extends StatelessWidget {\n  final TextStyle textStyle = const TextStyle(\n    fontSize: 40,\n    fontWeight: FontWeight.bold,\n  );\n  final String text;\n  const CounterInformationText({this.text});\n@override\n  Widget build(BuildContext context) {\n    debugPrint('$text, ${this.hashCode}');\n    return Text(text, style: textStyle);\n  }\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"build 메소드가 호출되면 text가 출력됩니다.\n버튼을 누른 후 출력된 결과를 보면,"}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"# 최초\nI am Method, 544291526\nI am const Stateless Widget:, 1055342562\nI am Stateless Widget, 137000319\n# 한번 눌렀을 때\nI am Method, 544291526\nI am Stateless Widget, 18505293\n# 두번 눌렀을 때\nI am Method, 544291526\nI am Stateless Widget, 350460176\n# 세번 눌렀을 때\nI am Method, 544291526\nI am Stateless Widget, 949599705\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"최초에는 메소드 \u002F const Stateless 위젯 \u002F Stateless 위젯 모두 build 메소드가 호출됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"문제는 그 다음입니다. const Stateless 위젯의 build 메소드는 더이상 호출되지 않습니다.\n그러나 나머지 메소드와 const가 없는 Stateless 위젯은 계속 호출됩니다.\n특히 Stateless 위젯은 인스턴스를 매번 만들게 되므로 해시코드도 계속 변경됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Stateless 위젯은 이름 그대로 상태를 가지지 못하기 때문에 복잡한 연산이 들어갈 여지가 적습니다. 그러나 메소드로 리팩토링 한 경우에는 조금 문제가 됩니다.\n메소드에서 무언가 계산을 한 다음 위젯을 리턴한다면 계산을 하는 동안 매번 UI 렌더링에 블러킹이 생기게 됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"만약 클래스 내부 변수가 body 부분에 표시되는데 값에 변화가 있어서 변경된 값으로\n표시해주기 위해 statefulwidget에서 setState()를 호출했다면 build() 부분이 실행됩니다.\n우리가 다시 그릴 필요가 있는 부분은 Body 부분인데 AppBar()도 다시 rebuild하게 됩니다.\n불필요한 일을 상태가 바뀔 때마다 반복해서 해주게 됩니다."}]},{type:a,value:c},{type:b,tag:D,props:{id:aL},children:[{type:b,tag:h,props:{href:bs,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"###*그렇다면 상태가 없는 긴 위젯을 리팩토링 할 때는 어떻게 해야할까요?"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"다음 두가지를 유의해서 리팩토링 해야합니다."}]},{type:a,value:c},{type:b,tag:P,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"StatelessWidget일 것"}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"const keyword를 최대한 사용할 것"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"const 키워드의 경우 위젯 속성 외에도 생성자, TextStyle과 같은 속성 등에도 사용할 수 있습니다.\n더 이상 바뀔 가능성이 없는 모든 곳에 const 키워드를 사용하면, 화면이 조금만 바뀌더라도 관계없는 위젯들이\n다시 처음부터 렌더링되는 일을 막을 수 있을 것입니다."}]}]},dir:ac,path:"\u002Fblog\u002Fflutter-study-week5",extension:ad,createdAt:bt,updatedAt:bt},{slug:"reactnative-study-week3",description:"ThemeProvider, State 등 다양한 기능을 사용한 TODO-LIST",title:aN,category:aa,author:"Eunsol Kim",featured:bu,toc:[{id:bv,depth:ao,text:aN},{id:bw,depth:C,text:bx},{id:by,depth:C,text:bz},{id:bA,depth:C,text:aO},{id:bB,depth:C,text:bC}],body:{type:ab,children:[{type:b,tag:bD,props:{id:bv},children:[{type:b,tag:h,props:{ariaHidden:j,href:"#react-native-%EC%8A%A4%ED%84%B0%EB%94%94-3%EC%A3%BC%EC%B0%A8",tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aN}]},{type:a,value:c},{type:b,tag:D,props:{id:bw},children:[{type:b,tag:h,props:{ariaHidden:j,href:"#%EB%B0%B0%EC%9B%A0%EB%8D%98-%EB%82%B4%EC%9A%A9-%EB%B3%B5%EC%8A%B5",tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:bx}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:aw}]},{type:a,value:" : 스타일드 컴포넌트를 사용할 때 ThemeProvider로 theme를 지정하면, 하나의 파일에서 지정해 놓은 색을 다른 컴포넌트에서 사용할 수 있어 편리합니다."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"또한, theme의 색상을 한 파일에서 관리하므로 유지 보수가 편리합니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[Y,s]},children:[{type:b,tag:t,props:{},children:[{type:b,tag:d,props:{className:[e,S,ax]},children:[{type:a,value:aP}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,S]},children:[{type:a,value:ap}]},{type:a,value:" theme "},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:L}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:bE}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:"'#101010'"}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:"itemBackground"}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:"'#313131'"}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:"main"}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:"'#778bdd'"}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:a}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:"'#cfcfcf'"}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:"done"}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:"'#616161'"}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Z}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:aq}]},{type:a,value:" : props의 타입과 필수 여부를 확인할 수 있습니."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[Y,s]},children:[{type:b,tag:t,props:{},children:[{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:"Input"}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Q}]},{type:b,tag:d,props:{className:[e,R]},children:[{type:a,value:"propTypes"}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:L}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:"placeholder"}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:aq}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Q}]},{type:b,tag:d,props:{className:[e,R]},children:[{type:a,value:E}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:"value"}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:aq}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Q}]},{type:b,tag:d,props:{className:[e,R]},children:[{type:a,value:E}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Q}]},{type:b,tag:d,props:{className:[e,R]},children:[{type:a,value:aQ}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:"onChangeText"}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:aq}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Q}]},{type:b,tag:d,props:{className:[e,R]},children:[{type:a,value:bF}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Q}]},{type:b,tag:d,props:{className:[e,R]},children:[{type:a,value:aQ}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:"onSubmitEditing"}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:aq}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Q}]},{type:b,tag:d,props:{className:[e,R]},children:[{type:a,value:bF}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Q}]},{type:b,tag:d,props:{className:[e,R]},children:[{type:a,value:aQ}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Z}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"State(상태)"}]},{type:a,value:" : 컴포넌트에서 변화할 수 있는 값입니다."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"상태(State)가 변화하면 컴포넌트가 다시 렌더링됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"아래는 state를 사용한 todo-list 예제입니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[Y,s]},children:[{type:b,tag:t,props:{},children:[{type:b,tag:d,props:{className:[e,S]},children:[{type:a,value:ap}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:bG}]},{type:a,value:bH},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:" setNewTask"},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:bI}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:L}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,_]},children:[{type:a,value:"useState"}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:ae}]},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:bJ}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:af}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Z}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,S]},children:[{type:a,value:ap}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,bK,_]},children:[{type:a,value:"_addTask"}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:L}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:ae}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:af}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,bL,i]},children:[{type:a,value:bM}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:a,value:M},{type:b,tag:d,props:{className:[e,_]},children:[{type:a,value:"alert"}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:ae}]},{type:b,tag:d,props:{className:[e,"template-string"]},children:[{type:b,tag:d,props:{className:[e,bN,E]},children:[{type:a,value:bO}]},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:"Add: "}]},{type:b,tag:d,props:{className:[e,"interpolation"]},children:[{type:b,tag:d,props:{className:[e,bP,g]},children:[{type:a,value:"${"}]},{type:a,value:bH},{type:b,tag:d,props:{className:[e,bP,g]},children:[{type:a,value:F}]}]},{type:b,tag:d,props:{className:[e,bN,E]},children:[{type:a,value:bO}]}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:af}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Z}]},{type:a,value:M},{type:b,tag:d,props:{className:[e,_]},children:[{type:a,value:bQ}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:ae}]},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:bJ}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:af}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Z}]},{type:a,value:bR},{type:b,tag:d,props:{className:[e,bS]},children:[{type:a,value:"\u002F\u002F 초기화 해주는 거 "}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Z}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,S]},children:[{type:a,value:ap}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,bK,_]},children:[{type:a,value:"_handleTextChange"}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:L}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,"parameter"]},children:[{type:a,value:a}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,bL,i]},children:[{type:a,value:bM}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:a,value:M},{type:b,tag:d,props:{className:[e,_]},children:[{type:a,value:bQ}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:ae}]},{type:a,value:a},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:af}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Z}]},{type:a,value:bR},{type:b,tag:d,props:{className:[e,bS]},children:[{type:a,value:"\u002F\u002F 텍스트 변할 때마다 저장"}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Z}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"useState를 사용하면 상태 관리 변수와 Setter 함수를 배열로 반환할 수 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"상태 변수는 Setter 함수로 변경되어야 합니다."}]},{type:a,value:c},{type:b,tag:D,props:{id:by},children:[{type:b,tag:h,props:{ariaHidden:j,href:"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0",tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:bz}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:aw}]},{type:a,value:" : ThemeProvider를 이용하여 todolist의 전체 theme를 지정합니다."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"스타일을 지정할 때 미리 지정한 색을 사용하면, 컴포넌트마다 일일이 색을 지정할 필요 없이 편리하게 사용할 수 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"작성된 App 컴포넌트를 src 바깥의 App.js 파일을 변경하여 메인 파일로 만듭니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"ThemeProvider 설정 이미지",src:"\u002Freactnative-study-week3\u002F01.png"},children:[]}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"Title 컴포넌트 만들기"}]},{type:a,value:" : TO DO LIST라는 글자를 화면 최상단에 표시하기 위한 Title 컴포넌트를 만듭니다."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"title 컴포넌트의 color (폰트 색상)에 theme.js의 값이 사용된 것을 볼 수 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"Title 컴포넌트 설정 이미지",src:"\u002Freactnative-study-week3\u002F02.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"Title 컴포넌트 앱 화면",src:"\u002Freactnative-study-week3\u002F01-1.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"안드로이드 화면에서 TO DO LIST가 보이게 되는데, 일부가 상태 바에 가려져 있습니다."}]},{type:a,value:c},{type:b,tag:v,props:{id:"safeareaview"},children:[{type:b,tag:h,props:{ariaHidden:j,href:"#safeareaview",tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"SafeAreaView"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"SafeAreaView는 아이폰 11 처럼 노치 디자인이 있는 기기에서 자동으로 padding 값을 적용해주는 컴포넌트입니다."}]},{type:a,value:c},{type:b,tag:v,props:{id:"statusbar"},children:[{type:b,tag:h,props:{ariaHidden:j,href:"#statusbar",tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:bT}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"안드로이드 화면에서 Title 컴포넌트가 상태 바에 일부 가려져 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"앱의 배경색을 어두운 색으로 설정하면서 상태바의 내용이 제대로 안 들어와서 발생한 문제로, 상태바의 내용을 흰색으로 보이도록 수정합니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[Y,s]},children:[{type:b,tag:t,props:{},children:[{type:b,tag:d,props:{className:[e,S,ax]},children:[{type:a,value:aP}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,S,ax]},children:[{type:a,value:"default"}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,S]},children:[{type:a,value:_}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,_]},children:[{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:"App"}]}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:ae}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:af}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,S,"control-flow"]},children:[{type:a,value:"return"}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:ae}]},{type:a,value:M},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:N}]},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:aw}]},{type:a,value:" theme"},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:L}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:a,value:bU},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:O}]},{type:a,value:ay},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:N}]},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:bV}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:O}]},{type:a,value:aR},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:N}]},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:bT}]},{type:a,value:"\n                    barStyle"},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:L}]},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:"\"light-content\""}]},{type:a,value:"\n                    backgroundColor"},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:L}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:a,value:bU},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Q}]},{type:b,tag:d,props:{className:[e,R]},children:[{type:a,value:bE}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:a,value:aR},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:$}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:O}]},{type:a,value:aR},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:N}]},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:bW}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:O}]},{type:b,tag:d,props:{className:[e,aS]},children:[{type:a,value:"TO"}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,aS]},children:[{type:a,value:"DO"}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,aS]},children:[{type:a,value:"LIST"}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:N}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:$}]},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:bW}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:O}]},{type:a,value:ay},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:N}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:$}]},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:bV}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:O}]},{type:a,value:M},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:N}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:$}]},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:aw}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:O}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:af}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"barStyle의 light-content 값은 상태바의 내용을 흰색으로 보이게 하는 것입니다.\nbackgroundColor 속성은 안드로이드에서만 적용됩니다."}]},{type:a,value:c},{type:b,tag:D,props:{id:bA},children:[{type:b,tag:h,props:{ariaHidden:j,href:"#dimensions",tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aO}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"컴포넌트의 양 옆에 공백을 주고 싶은데, 모든 기기에서 동일하게 좌우 공백을 주고 싶다면 Dimensions를 사용하면 됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Dimensios는 처음 값을 받아왔을 때의 크기로 고정되므로, 이벤트 리스너를 등록해서 크기 변화에 대응할 수 있도록 만들 수 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:aO,src:"\u002Freactnative-study-week3\u002F03.png"},children:[]}]},{type:a,value:c},{type:b,tag:D,props:{id:bB},children:[{type:b,tag:h,props:{ariaHidden:j,href:"#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%97%90-attrs-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0",tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:bC}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Input 컴포넌트를 만들고, attrs를 이용해서 theme에 정의된 색상을 전달받은 props의 색으로 설정합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"Input 컴포넌트",src:"\u002Freactnative-study-week3\u002F04.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이때, TextInput 컴포넌트의 경우, 기본 값으로 첫 글자가 대문자로 나타나며 오타 입력 시 자동 수정되는 속성이 부여되어 있습니다.\n(iOS의 경우, 완료 버튼이 return으로 되어 있습니다.)"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이를 변경하기 위해 속성을 일부 변경했습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"Input 컴포넌트 속성 변경",src:"\u002Freactnative-study-week3\u002F04-1.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"속성을 다음과 같이 변경하면 자동 대문자 변환, 자동 수정 기능을 사용하지 않습니다.\n또한 키보드의 완료 버튼을 설정하는 returnKeyType을 'done'으로 변경했습니다."}]}]},dir:ac,path:"\u002Fblog\u002Freactnative-study-week3",extension:ad,createdAt:bX,updatedAt:bX},{slug:"flutter-study-week4",description:"Flutter 스터디 4주차에 대한 내용입니다.",title:"Flutter 스터디 4주차",category:aa,author:aD,toc:[{id:bY,depth:C,text:aT},{id:bZ,depth:C,text:aU},{id:b_,depth:C,text:aV},{id:b$,depth:C,text:aW}],body:{type:ab,children:[{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:h,props:{href:am,rel:[U,V,W],target:X},children:[{type:a,value:an}]},{type:a,value:" section 11 까지 본 뒤 진행 한 스터디 입니다."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:v,props:{id:ah},children:[{type:b,tag:h,props:{href:ai,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aj}]},{type:a,value:c},{type:b,tag:P,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:v,props:{id:"package"},children:[{type:b,tag:h,props:{href:"#package",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"Package"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:aT}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:aU}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:P,props:{start:ao},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:v,props:{id:"위젯의-함수화"},children:[{type:b,tag:h,props:{href:"#%EC%9C%84%EC%A0%AF%EC%9D%98-%ED%95%A8%EC%88%98%ED%99%94",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"위젯의 함수화"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:bf,props:{id:bg},children:[{type:b,tag:h,props:{href:bh,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:bi}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:aV}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:aW}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:K,props:{id:"1-package"},children:[{type:b,tag:h,props:{href:"#1-package",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"1. Package"}]},{type:a,value:c},{type:b,tag:D,props:{id:bY},children:[{type:b,tag:h,props:{href:"#package-%EB%9E%80",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aT}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"본 내용은 "},{type:b,tag:h,props:{href:"https:\u002F\u002Fdocs.flutter.dev\u002Fdevelopment\u002Fpackages-and-plugins\u002Fusing-packages",rel:[U,V,W],target:X},children:[{type:a,value:"Flutter 공식 홈페이지"}]},{type:a,value:"를 인용한 내용입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"공식 홈의 내용에 따르면 Flutter & Dart Package는 pubspec file를 포함하고 있는 directory라고 합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"추가로 dependencies, Dart libraries, apps, resources, tests, images, examples 등 단순 코드 덩어리를 넘어서서 더 많은 내용들을 Package에 담을 수 있다고 합니다."}]},{type:a,value:c},{type:b,tag:D,props:{id:bZ},children:[{type:b,tag:h,props:{href:"#package-%EC%82%AC%EC%9A%A9%EB%B2%95",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aU}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Package들은 "},{type:b,tag:h,props:{href:"https:\u002F\u002Fpub.dev\u002F",rel:[U,V,W],target:X},children:[{type:a,value:"pub.dev"}]},{type:a,value:" 에 발표됩니다.\n"},{type:b,tag:u,props:{alt:"pub dev",src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F148356037-0e3a3741-3fa9-4529-b658-309ed57fae89.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Flutter & Dart Package 중에 유명한 mobx를 예시로 들어보겠습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"mobx를 검색해보면 아래와 같은 페이지가 뜹니다.\n"},{type:b,tag:u,props:{alt:"mobx",src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F148356387-5a4a3e64-3be8-4de9-95fd-b359c8e44ae0.png"},children:[]},{type:a,value:"\n오른쪽에 있는 likes, pub points, popularity를 확인하면서 Package를 선택합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"mobx2",src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F148357263-f146b0fc-2ba9-4f7a-9d44-3f3d8b7aa26a.png"},children:[]},{type:a,value:"\n하단에 있는 Readme, Changelog, Example, Installing, Versions, Scores를 통해 이 Package와 관련된 모든 정보들을 확인할 수 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이번에는 Installing 위주로 해보겠습니다.\n타 Package와는 세부내용들이 다를 수 있음을 알려드립니다.\n하지만 위 사이트 Installing 내용만 따라가면 다 이해되실 내용입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"mobx 기준으로,\npubspec.yaml 파일 내에서"}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"dependencies:\n  mobx: ^2.0.6+1\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"위와 같은 코드를 작성하고 pub get을 실행한 후,\nPackage를 실행할 .dart 파일에서"}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"import 'package:mobx\u002Fmobx.dart';\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"위 코드를 실행하면 끝입니다."}]},{type:a,value:c},{type:b,tag:K,props:{id:"2-위젯의-함수화"},children:[{type:b,tag:h,props:{href:"#2-%EC%9C%84%EC%A0%AF%EC%9D%98-%ED%95%A8%EC%88%98%ED%99%94",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"2. 위젯의 함수화"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Flutter를 사용하다보면 단순한 위젯의 반복이 필요할 때가 있습니다.\n그럴 때는 타 언어와 같은 방식으로 공통된 부분을 함수화하여 똑같은 논리로 리팩토링을 해주면 됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"너무 간단한 내용이라, 아래의 예시로 세부 설명을 대체하겠습니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"Expanded(\n    child: FlatButton(\n        color: Colors.red,\n        onpressed: () {\n        playSound(1);\n        }\n    )\n),\nExpanded(\n    child: FlatButton(\n        color: Colors.orange,\n        onpressed: () {\n        playSound(2);\n        }\n    )\n),\nExpanded(\n    child: FlatButton(\n        color: Colors.yellow,\n        onpressed: () {\n        playSound(3);\n        }\n    )\n),\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이와 같은 내용의 코드를 아래와 같이 수정가능합니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"Expanded buildKey({Color color, int soundNumber}) {\n    return Expanded(\n        child: FlatButton(\n            color: color,\n            onpressed: () {\n            playSound(soundNumber);\n            }\n        )\n    )\n}\n\nbuildKey(color: Colors.red, soundNumber: 1),\nbuildKey(color: Colors.orange, soundNumber: 2),\nbuildKey(color: Colors.yellow, soundNumber: 3),\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"여기서 알아야 할 점은,\n함수를 선언할 때 Widget을 return하는 함수일 경우, 함수의 종류를 결정하는 맨 앞에 Widget의 종류를 적어줘야 합니다.\n위 코드에서는 Expanded Widget을 return 하기 때문에 함수 선언 시 맨 앞에 void가 아닌 Expanded를 적어줬습니다."}]},{type:a,value:c},{type:b,tag:K,props:{id:bj},children:[{type:b,tag:h,props:{href:bk,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:bl}]},{type:a,value:c},{type:b,tag:D,props:{id:b_},children:[{type:b,tag:h,props:{href:"#_-under-bar-%EC%9D%98-%EC%9D%98%EB%AF%B8",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aV}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"타 언어에서도 종종 사용되며, 변수 앞에 _를 붙이면 그 변수는 해당 파일 내에서만 수정이 가능해집니다.\n코드가 길어지면서 실수로라도 발생할 데이터들의 손상을 방지하고자 이와 같은 방식을 사용합니다."}]},{type:a,value:c},{type:b,tag:D,props:{id:b$},children:[{type:b,tag:h,props:{href:"#override-%EC%9D%98-%EC%9D%98%EB%AF%B8",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aW}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"OOP의 Inheritance와 관련"}]},{type:a,value:"\nClass를 상속하는 과정에서 기존 class의 함수 일부분을 수정할 때 사용합니다."}]}]},dir:ac,path:"\u002Fblog\u002Fflutter-study-week4",extension:ad,createdAt:ca,updatedAt:ca},{slug:"flutter-study-week3",description:"Flutter 스터디 3주차에 대한 내용입니다.",title:"Flutter 스터디 3주차 (Stateful)",category:aa,author:bn,toc:[{id:cb,depth:C,text:cc}],body:{type:ab,children:[{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:h,props:{href:am,rel:[U,V,W],target:X},children:[{type:a,value:an}]},{type:a,value:" section 8 까지 본 뒤 진행 한 스터디 입니다."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:D,props:{id:cb},children:[{type:b,tag:h,props:{href:"#flutter-%EC%8A%A4%ED%84%B0%EB%94%94-3%EC%A3%BC%EC%B0%A8---stateful",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:cc}]},{type:a,value:c},{type:b,tag:v,props:{id:ah},children:[{type:b,tag:h,props:{href:ai,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aj}]},{type:a,value:c},{type:b,tag:P,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:v,props:{id:"state-란-무엇인가"},children:[{type:b,tag:h,props:{href:"#state-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"State 란 무엇인가?"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:cd}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:ce}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:P,props:{start:ao},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:v,props:{id:"stateful-widget-lifecycle"},children:[{type:b,tag:h,props:{href:"#stateful-widget-lifecycle",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"Stateful widget lifecycle"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"Stateful widget과 생명주기"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:K,props:{id:ag},children:[]},{type:a,value:c},{type:b,tag:v,props:{id:"1-state란-무엇인가"},children:[{type:b,tag:h,props:{href:"#1-state%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"1. State란 무엇인가?"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"플러터를 얘기할 때  \"모든 것이 위젯\"이라는 말을 꽤 많이 들었습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"하지만 State는 위젯이라고 부르기엔 UI상에 노출되지 않고 더 특별한 기능을 담당합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"State란 간단하게 앱에서 사용되는 data들을 의미합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Widget들을 컨트롤 해주고 어플리케이션을 만들어 나갈 때 State(상태)를 사용합니다."}]},{type:a,value:c},{type:b,tag:v,props:{id:"state의-종류"},children:[{type:b,tag:h,props:{href:"#state%EC%9D%98-%EC%A2%85%EB%A5%98",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:cd}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"플러터의 state는 App state와 widget state, 두가지로 나눌 수 있습니다."}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"App state"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"먼저 App state는 앱 전반에 걸쳐 사용되는 data입니다"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"앱 여기저기 전반적으로 다 필요하고, 한쪽에서 app state를 변경하면 다른 쪽에서도 data변경을 반영해야 합니다."}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"Widget state"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Widget state는 widget 내부에서만 사용되는 data입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"App state와의 차이점이라면 위젯 내부에서만 사용되니 따로 공유하거나 할 필요가 없습니다."}]},{type:a,value:c},{type:b,tag:v,props:{id:"stateful-widget-과-stateless-widget"},children:[{type:b,tag:h,props:{href:"#stateful-widget-%EA%B3%BC-stateless-widget",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:ce}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"(1) Stateless widget"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"StatelessWidget은 말그대로 State가 없는 Widget입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"State가 없다고 해서 Data가 없다는 뜻은 아닙니다. '변경될 data가 없다' 로 이해하시면 됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"StatelessWidget도 만들때는 어떻게 만들어야할지 data가 주어질 수도 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"하지만 그것으로 끝, 내부의 data는 변경되지 않습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"예를 들면 화면 한 부분에 설명을 담당하는 Text위젯이나, 배경이 되는 위젯이 StatelessWidget이 될 수 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"클릭해서 어떤 반응을 기대하지도 않는 widget들 말이죠."}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"stateless widget 생성하는 법\n"},{type:b,tag:u,props:{alt:"stateless",src:"\u002Fflutter-study-week3\u002Fstateless.PNG"},children:[]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"위 사진과 같이 stateless widget 을 생성할 수 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"int 앞에 final를 사용하여 number에 다른 값을 할당하는게 불가능해졌고, 따라서 immutable한 변수가 됐습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"stateless widget에서 위와 같이 final 변수를 이용한다면 더 안정적인 코딩이 가능합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"(2) Stateful widget"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"StatefulWidget은 State가 존재하는 Widget입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그래서 내부에 data가 변경될 경우, 그에 맞게 화면을 다시 그려서 변경된 부분을 위젯에 반영할 수 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"예를 들어 어떤 점수를 나타내는 위젯의 경우 사용자가 점수를 획득하면 그에 따라 계속 업데이트를 해주어야겠죠?"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이러한 위젯이 StatefulWidget입니다."}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"stateful widget 생성하는 법\n"},{type:b,tag:u,props:{alt:"stateful",src:"\u002Fflutter-study-week3\u002Fstateful.PNG"},children:[]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"StatefulWidget은 바뀌는 부분, 바뀌지 않는 부분 두가지로 나뉩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"위젯의 state이 바뀌고 우리가 변경된 사항을 화면에 그리라고 명령을 하면 플러터는 기존 위젯을 날려버리고 업데이트된 부분을 반영해서 위젯을 다시 그리게 됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"다시 그릴 때, 해당 위젯을 완전히 날려버리고 다시 그린다고 하면 data도 함께 날라가 버립니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Data는 살려두고, 해당 data를 위젯에 입혀서 다시 만들어내게 됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그러면 계속해서 사라지지 않고 data를 들고 있을 class가 필요합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그 class를 StatefulWidget은 가지고 있어야하기 때문에 2개의 클래스도 구성되어 있습니다."}]},{type:a,value:c},{type:b,tag:v,props:{id:"굳이-state와-stateful-widget을-분리한-이유가-뭘까"},children:[{type:b,tag:h,props:{href:"#%EA%B5%B3%EC%9D%B4-state%EC%99%80-stateful-widget%EC%9D%84-%EB%B6%84%EB%A6%AC%ED%95%9C-%EC%9D%B4%EC%9C%A0%EA%B0%80-%EB%AD%98%EA%B9%8C",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"굳이 state와 stateful widget을 분리한 이유가 뭘까?"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"State는 상태 클래스로 StatefulWidget의 생명주기 및 상태를 관리하는 클래스입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"StatelessWidget 같은 경우에는 생명주기가 없습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"하지만 StatefulWidget은 생명주기가 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"정확히 말하자면 StatefulWidget이 가지고 있는 State가 생명주기를 가지고 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"위젯은 State 클래스만큼 다양한 생명주기를 가질 수 없습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"StatefulWidget 또한 마찬가지로 위젯이기 때문에 생명주기를 State가 관리하도록 역할을 몰아준 것입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그런데 만약 StatafulWidget이 생명주기를 가지면 어떻게 될까요?"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"속성 또는 부모 위젯이 바뀌게 되면 StatefulWidget 또한 예외 없이 바뀌어야 합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이 과정에서 위젯이 다시 재생성하는데 StatefulWidget이 생명주기를 가지고 있으면 생명주기를 다시 복구하는데 꽤나 많은 비용이 듭니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"하지만 State가 생명주기를 관리한다면 위젯과 함께 폐기되었다가 재구축하지 않습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"또한 State는 폐기되지 않으므로 데이터 변경에 대한 응답으로 필요할 때 언제든지 위젯을 재구성할 수 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"따라서 성능을 위해 State와 StatefulWidget를 분리했다고 말할 수 있습니다."}]},{type:a,value:c},{type:b,tag:K,props:{id:au},children:[{type:b,tag:h,props:{href:av,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]}]},{type:a,value:c},{type:b,tag:v,props:{id:"2stateful-widget-lifecycle"},children:[{type:b,tag:h,props:{href:"#2stateful-widget-lifecycle",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"2.Stateful widget lifecycle"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Stateful widget의 lifecycle은 다음 단계를 포함하고 있습니다.\n"},{type:b,tag:u,props:{alt:"lifecycle",src:"\u002Fflutter-study-week3\u002Flifecycle.PNG"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"단계별로 하나씩 살펴보겠습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"(1) createState()"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"플러터가 StatefulWidget을 빌드하도록 지시하면 즉시 [createState()]가 호출됩니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"class Home extends StatefulWidget {\n  @override\n  HomeState\u003CStatefulWidget\u003E createState() =\u003E Home();\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"(2) initState()"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"위젯이 생성될때 처음으로 호출되는 메서드입니다. initState는 오직 한번만 호출됩니다. 또한 반드시 super.initState()를 호출해야 합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"\u003CinitState에서 실행되면 좋은 것들\u003E"}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"생성된 위젯 인스턴스의 BuildContext에 의존적인 것들의 데이터 초기화"}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"동일 위젯트리내에 부모위젯에 의존하는 속성 초기화"}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"Stream 구독, 알림변경, 또는 위젯의 데이터를 변경할 수 있는 다른 객체 핸들링"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"@override\nvoid initState(){\n  super.initState();\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"(3) didChangeDependencies()"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"didChangeDependencies 메서드는 위젯이 최초 생성될때 initState 다음에 바로 호출됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"또한 위젯이 의존하는 데이터의 객체가 호출될때마다 호출됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"예를 들면 업데이트되는 위젯을 상속한 경우. 공식문서 또한 상속한 위젯이 업데이트 될때 네트워크 호출(또는 다른 비용이 큰 액션, API호출) 이 필요한 경우 유용합니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"@override\nvoid didChangeDependencies() { \n \n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"(4) build()"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이 메서드는 자주 호출되고 필수이며 재정의 대상(@override)이고 반드시 Widget을 리턴해야 합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Padding, Center 조차도 child 또는 children을 가진 위젯이며 화면에 모든 UI 위젯으로 랜더링 할 때 마다 호출합니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"@override\nWidget build(BuildContext context) {\n\u002F\u002Fadd your widgets\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"(5) didUpdateWidget(Widget oldWidget)"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"didUpdateWidget()는 부모 위젯이 변경되어 이 위젯을 재구성해야 하는 경우 사용됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"플러터가 오래동안 유지되는 state를 다시 사용하기 때문입니다. 이 경우 initState()에서 처럼 일부 데이터를 다시 초기화 해야 합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"build() 메서드가 Stream이나 변경 가능한 데이터에 의존적인 경우 이전 객체에서 구독을 취소하고 didUpdateWidget()에서 새로운 인스턴스에 다시 구독 해야합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"플러터는 항상 이 메서드 수행 후에 build()메서드 호출 하므로, setState() 이후 모든 추가 호출은 불필요합니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"@protected\nvoid didUpdateWidget(Home oldWidget) {\nsuper.didUpdateWidget(oldWidget);\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"(6) setState()"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"setState() 메서드는 플러터 프레임워크 자체적, 또는 개발자로 부터 자주 호출됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"'데이터가 변경되었음’을 프레임워크에 알리는데 사용되며 build context의 위젯을 다시 빌드하게 합니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"setState(() {\n\n});\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"(7) mounted is true"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"createState가 state클래스를 생성하면 buildContext는 state에 할당 됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"BuildContext는 위젯이 배치된 위젯 트리의 위치를 단순화 한 것입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"모든 위젯은 bool형식의 this.mounted 속성을 가지고 있고 buildContext가 할당되면 true를 리턴합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"위젯이 unmounted상태일때 setState를 호출하면 error가 발생합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"(8)deactivate()"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이 메서드는 거의 사용되지 않습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"deactivate()는 tree에서 State가 제거 될때 호출 됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"(9) dispose()\ndispose()를 사용하면 State객체가 영구히 제거 됩니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"@override\nvoid dispose(){\nsuper.dispose();\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"(10) mounted is false"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이 상태에서 state 객체는 결코 다시 mount되지 않으며, setState()가 호출되면 에러가 발생합니다."}]},{type:a,value:c},{type:b,tag:K,props:{id:at},children:[{type:b,tag:h,props:{href:aM,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"이번 주차 강의에서는 flutter의 기본적인 ui를 다루는 내용이었고, stateless, stateful widget을 다루었기 때문에"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"stateful widget의 생명주기에 대해 심화적으로 알아보았습니다."}]}]},dir:ac,path:"\u002Fblog\u002Fflutter-study-week3",extension:ad,createdAt:cf,updatedAt:cf},{slug:"flutter-study-week2",description:"Flutter 스터디 2주차에 대한 내용입니다.",title:"Flutter 스터디 2주차 (Scaffold)",category:aa,author:"Junho Lim",toc:[{id:cg,depth:C,text:ch}],body:{type:ab,children:[{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:h,props:{href:am,rel:[U,V,W],target:X},children:[{type:a,value:an}]},{type:a,value:" section 5 까지 본 뒤 진행 한 스터디 입니다."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:D,props:{id:cg},children:[{type:b,tag:h,props:{href:"#flutter-%EC%8A%A4%ED%84%B0%EB%94%94-2%EC%A3%BC%EC%B0%A8---scaffold",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:ch}]},{type:a,value:c},{type:b,tag:v,props:{id:ah},children:[{type:b,tag:h,props:{href:ai,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aj}]},{type:a,value:c},{type:b,tag:P,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:v,props:{id:"scaffold-란-무엇인가"},children:[{type:b,tag:h,props:{href:"#scaffold-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"Scaffold 란 무엇인가?"}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:ci}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:v,props:{id:"scaffold-의-구성-요소-살펴보기"},children:[{type:b,tag:h,props:{href:"#scaffold-%EC%9D%98-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C-%EC%82%B4%ED%8E%B4%EB%B3%B4%EA%B8%B0",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"Scaffold 의 구성 요소 살펴보기"}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"AppBar"}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:cj}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:ck}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"Floating Action Button"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:K,props:{id:ag},children:[]},{type:a,value:c},{type:b,tag:v,props:{id:"1-scaffold란-무엇인가"},children:[{type:b,tag:h,props:{href:"#1-scaffold%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"1. Scaffold란 무엇인가?"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Flutter 공식 문서를 살펴보면 Scaffold에 대해 다음과 같이 정의하고 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"Scaffold 정의",src:"\u002Fflutter-study-week2\u002Fscaffold.PNG"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"즉 Scaffold 란 Flutter에서 Material Design visual layout 을 구현하는데 사용됩니다."}]},{type:a,value:c},{type:b,tag:v,props:{id:"material-design-과-scaffold"},children:[{type:b,tag:h,props:{href:"#material-design-%EA%B3%BC-scaffold",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:ci}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그렇다면 Material Design 은 무엇일까요?"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Material Design 은 플랫 디자인의 장점을 살리면서도 빛에 따른 종이의 그림자 효과를 이용하여 입체감을 살리는 디자인 방식인데요,"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"구글에서는 안드로이드의 기본 디자인 가이드로 바로 이 Material Design 을 사용하고 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"즉 Scaffold는 바로 이 Material Design 을 따르는 앱 화면을 구성하기 위한 뼈대라고 생각하시면 됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"cf)애플에서는 제공하는 디자인 가이드는 Cupertino Design 입니다."}]},{type:a,value:c},{type:b,tag:K,props:{id:au},children:[{type:b,tag:h,props:{href:av,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]}]},{type:a,value:c},{type:b,tag:v,props:{id:"2-scaffold-의-구성-요소-살펴보기"},children:[{type:b,tag:h,props:{href:"#2-scaffold-%EC%9D%98-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C-%EC%82%B4%ED%8E%B4%EB%B3%B4%EA%B8%B0",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"2. Scaffold 의 구성 요소 살펴보기"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"Scaffold properties",src:"\u002Fflutter-study-week2\u002Fscaffold_properties.PNG"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Scaffold위 사진 외에도 다양한 옵션들이 있습니다.\n이 중 아래 사진과 같이 자주 사용되는 appBar, Body, Bottom  Navigation Bar 에 대해 살펴 보겠습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"property 예시",src:"\u002Fflutter-study-week2\u002Fproperty.PNG"},children:[]}]},{type:a,value:c},{type:b,tag:v,props:{id:"appbar"},children:[{type:b,tag:h,props:{href:"#appbar",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"Appbar"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"appBar 의 경우 최상단에 위치하고 있는 bar를 말하며 아래와 같은 코드로 간단히 생성할 수 있습니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"class MyApp extends StatelessWidget {\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(title: Text('appBar Test'),),\n      )\n    );\n  }\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:v,props:{id:"body"},children:[{type:b,tag:h,props:{href:"#body",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:cj}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그 다음으로 AppBar 아래에 있는 body 영역 입니다. body의 경우 하나만 가질 수 있으며 아래와 같은 코드로 생성 할 수 있습니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"class MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n        home: Scaffold(\n      appBar: AppBar(\n        title: Text('appBar Test'),\n      ),\n      body: Text('body Test'),\n    ));\n  }\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:v,props:{id:"bottom-navigation-bar"},children:[{type:b,tag:h,props:{href:"#bottom-navigation-bar",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:ck}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"어플리케이션의 하단에 표시되는 여러 뷰를 선택할 수 있게 해주는 Bottom Navigation Bar의 코드입니다.\n이 때 안에 들어갈 item 은 최소 2개 이상 지정해 주어야 합니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"Widget build(BuildContext context) {\n    return MaterialApp(\n        debugShowCheckedModeBanner: false,\n        home: Scaffold(\n          appBar: AppBar(\n            title: Text('appBar Test'),\n          ),\n          body: Text('boy Test'),\n          bottomNavigationBar: BottomNavigationBar(\n            items: \u003CBottomNavigationBarItem\u003E[\n              BottomNavigationBarItem(\n                icon: Icon(Icons.home),\n                title: Text('Home'),\n              ),\n              BottomNavigationBarItem(\n                icon: Icon(Icons.business),\n                title: Text('Business'),\n              ),\n              BottomNavigationBarItem(\n                icon: Icon(Icons.school),\n                title: Text('School'),\n              ),\n            ],\n          ),\n        ));\n  }\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이번 주차 강의에서는 대부분 안드로이드 스튜디오 설정과 플러터 설치 및 기본 구조에 대한 내용이 주를 이루었기 때문에 Scaffold에 대해 알아보는 시간을 가졌습니다."}]}]},dir:ac,path:"\u002Fblog\u002Fflutter-study-week2",extension:ad,createdAt:cl,updatedAt:cl},{slug:"reactnative-study-week2",description:"스타일과 flexbox",title:aX,category:aa,author:"Kyunghun Kim",featured:bu,toc:[{id:cm,depth:ao,text:aX},{id:az,depth:C,text:az},{id:cn,depth:C,text:co}],body:{type:ab,children:[{type:b,tag:bD,props:{id:cm},children:[{type:b,tag:h,props:{href:"#reactnative-%EC%8A%A4%ED%84%B0%EB%94%94-2%EC%A3%BC%EC%B0%A8",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aX}]},{type:a,value:c},{type:b,tag:D,props:{id:az},children:[{type:b,tag:h,props:{href:"#%EC%8A%A4%ED%83%80%EC%9D%BC",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:az}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"style"}]},{type:a,value:" : 리액트네이티브의 컴포넌트는 style 프롭을 갖습니다."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"style 객체의 속성들을 수정하여 컴포넌트를 스타일링 할 수 있습니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[s,Y]},children:[{type:b,tag:t,props:{},children:[{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:N}]},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:aA}]},{type:a,value:ar},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:L}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:aY}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:cp}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:ak}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:"\"blue\""}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:O}]},{type:a,value:"인라인"},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:N}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:$}]},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:aA}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:O}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:cq}]},{type:a,value:" : StyleSheet.create로 보다 깔끔하게 정리하여 담아쓸 수 있습니다."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[s,Y]},children:[{type:b,tag:t,props:{},children:[{type:b,tag:d,props:{className:[e,S,ax]},children:[{type:a,value:aP}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,S]},children:[{type:a,value:ap}]},{type:a,value:" styles "},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:L}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:cq}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Q}]},{type:b,tag:d,props:{className:[e,"method",_,R]},children:[{type:a,value:"create"}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:ae}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:a,value:aB},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:cr}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:ak}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:cs}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:aY}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:cp}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:"fontSize"}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,T]},children:[{type:a,value:ct}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:aB},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:aB},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:a}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:aY}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:"\"orange\""}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:aB},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:af}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Z}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"style에 배열객체를"}]},{type:a,value:" : style 프롭으로 배열객체를 넣을 수 있습니다."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이 때, 배열의 index가 높을수록 더 높은 우선 순위를 갖습니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[s,Y]},children:[{type:b,tag:t,props:{},children:[{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:N}]},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:aA}]},{type:a,value:ar},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:L}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:bG}]},{type:a,value:"styles"},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Q}]},{type:b,tag:d,props:{className:[e,R]},children:[{type:a,value:cr}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:" styles"},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:Q}]},{type:b,tag:d,props:{className:[e,R]},children:[{type:a,value:a}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:bI}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:O}]},{type:a,value:"배열 객체"},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:N}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:$}]},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:aA}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:O}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"style 이미지",src:"\u002Freactnative-study-week2\u002F01.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"StyleSheet로 styles에 담은 errorText와 text를 배열을 통해 Text에 적용시켰습니다."},{type:b,tag:al,props:{},children:[]},{type:a,value:"\n이때 styles.text의 우선순위가 더 높기 때문에 color: \"orange\"가 적용되었습니다."}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:cu}]},{type:a,value:" : 더 직관성있는 코드 작성을 도와주는 라이브러리입니다."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"camel casing이 아닌 Tagged Template Literals 문법을 사용하여 웹표기 방식과 동일합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:h,props:{href:"https:\u002F\u002Fstyled-components.com\u002F",rel:[U,V,W],target:X},children:[{type:a,value:cu}]}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[s,w]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"const StyledText = styled.Text`\n  color: palevioletred;\n`\n"}]}]}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:cv}]},{type:a,value:" : shadow 속성을 통해 컴포넌트에 그림자 효과를 부여할 수 있습니다."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[s,Y]},children:[{type:b,tag:t,props:{},children:[{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:cv}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:a,value:M},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:ak}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:"\"white\""}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:M},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:cw}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,T]},children:[{type:a,value:cx}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:M},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:cy}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,T]},children:[{type:a,value:cx}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:M},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:"shadowColor"}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:cs}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:M},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:"shadowOffset"}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:a,value:ay},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:cy}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,T]},children:[{type:a,value:aZ}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:ay},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:cw}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,T]},children:[{type:a,value:aZ}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:M},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:M},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:"shadowOpacity"}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,T]},children:[{type:a,value:"0.5"}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:M},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:"shadowRadius"}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:b,tag:d,props:{className:[e,T]},children:[{type:a,value:aZ}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:M},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:"elevation"}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,T]},children:[{type:a,value:ct}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:J},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"shadow 이미지",src:"\u002Freactnative-study-week2\u002F02.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"shadow 설정 방식은 아이폰과 안드로이드 두 플랫폼에서 차이가 있습니다."},{type:b,tag:al,props:{},children:[]},{type:a,value:"\n안드로이드의 경우, elevation 속성을 통해 shadow 효과를 지정합니다."},{type:b,tag:al,props:{},children:[]},{type:a,value:"\n이때 Platform.select 기능을 사용하면 두 플랫폼에서 각각 실행될 코드를 지정할 수 있습니다."}]},{type:a,value:c},{type:b,tag:D,props:{id:cn},children:[{type:b,tag:h,props:{href:"#flexbox",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:co}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:aC}]},{type:a,value:" : 컴포넌트의 컨테이너 안에서의 크기를 비율로 설정할 수 있습니다."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[s,Y]},children:[{type:b,tag:t,props:{},children:[{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:N}]},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:a_}]},{type:a,value:ar},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:L}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:ak}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:"'red'"}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:aC}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,T]},children:[{type:a,value:a$}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:$}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:O}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:N}]},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:a_}]},{type:a,value:ar},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:L}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:ak}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:"'green'"}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:aC}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,T]},children:[{type:a,value:a$}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:$}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:O}]},{type:a,value:c},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:N}]},{type:b,tag:d,props:{className:[e,I]},children:[{type:a,value:a_}]},{type:a,value:ar},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:L}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:H}]},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:ak}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:b,tag:d,props:{className:[e,E]},children:[{type:a,value:"'blue'"}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:B}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,y,z]},children:[{type:a,value:aC}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:A}]},{type:a,value:o},{type:b,tag:d,props:{className:[e,T]},children:[{type:a,value:a$}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,g]},children:[{type:a,value:F}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:$}]},{type:b,tag:d,props:{className:[e,i]},children:[{type:a,value:O}]},{type:a,value:c}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"flex 이미지",src:"\u002Freactnative-study-week2\u002F03.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"빨강, 초록, 파랑 박스를 flex를 통해 1:1:1의 비율로 지정하였습니다."}]},{type:a,value:c},{type:b,tag:v,props:{id:"flexbox-아이템-정렬방식설정"},children:[{type:b,tag:h,props:{href:"#flexbox-%EC%95%84%EC%9D%B4%ED%85%9C-%EC%A0%95%EB%A0%AC%EB%B0%A9%EC%8B%9D%EC%84%A4%EC%A0%95",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:b,tag:G,props:{},children:[{type:a,value:"flexbox 아이템 정렬방식설정"}]}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[s,w]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"container: {\n      flex: 1,\n      flexDirection: \"column\",\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      \u002F\u002FflexDirection 수직방향\n      justifyContent: 'center',\n      \u002F\u002FflexDirection 방향\n    },\n"}]}]}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"flexDirection"}]},{type:a,value:" : 아이템이 쌓이는 방향을 지정합니다."},{type:b,tag:al,props:{},children:[]},{type:a,value:"\n일반적으로 column이 세로, row가 가로배치입니다."}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"alignItems"}]},{type:a,value:" : flexDirection의 수직방향 정렬 방식을 지정합니다."},{type:b,tag:al,props:{},children:[]},{type:a,value:c},{type:b,tag:u,props:{alt:"allignItems 이미지",src:"\u002Freactnative-study-week2\u002F03-1.png"},children:[]}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"justify-content"}]},{type:a,value:" : flexDirection 방향 정렬 방식을 지정합니다."},{type:b,tag:al,props:{},children:[]},{type:a,value:c},{type:b,tag:u,props:{alt:"justify-content 이미지",src:"\u002Freactnative-study-week2\u002F04.png"},children:[]}]},{type:a,value:c}]}]},dir:ac,path:"\u002Fblog\u002Freactnative-study-week2",extension:ad,createdAt:cz,updatedAt:cz},{slug:"flutter-study-week1",description:"Flutter 스터디 1주차에 대한 내용입니다.",title:"Flutter 2.0의 null safety 이해하기",category:aa,author:aD,toc:[{id:cA,depth:C,text:cB}],body:{type:ab,children:[{type:b,tag:D,props:{id:cA},children:[{type:b,tag:h,props:{href:"#flutter-20---null-safety",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:cB}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"dart",src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F142857202-15cddf29-cff7-44bb-9f1b-f768a713e9f3.png"},children:[]}]},{type:a,value:c},{type:b,tag:v,props:{id:ah},children:[{type:b,tag:h,props:{href:ai,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:aj}]},{type:a,value:c},{type:b,tag:P,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:v,props:{id:"null-이란-무엇인가"},children:[{type:b,tag:h,props:{href:"#null-%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"Null 이란 무엇인가?"}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"Null 은 왜 필요할까?"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:c},{type:b,tag:v,props:{id:"기존-코드의-문제점과-해결방법"},children:[{type:b,tag:h,props:{href:"#%EA%B8%B0%EC%A1%B4-%EC%BD%94%EB%93%9C%EC%9D%98-%EB%AC%B8%EC%A0%9C%EC%A0%90%EA%B3%BC-%ED%95%B4%EA%B2%B0%EB%B0%A9%EB%B2%95",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"기존 코드의 문제점과 해결방법"}]},{type:a,value:c},{type:b,tag:x,props:{},children:[{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"? 의 사용법"}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"late 의 사용법"}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"! 의 사용법"}]},{type:a,value:c},{type:b,tag:n,props:{},children:[{type:a,value:"required 의 사용법"}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:K,props:{id:ag},children:[]},{type:a,value:c},{type:b,tag:v,props:{id:"1-null이란-무엇인가"},children:[{type:b,tag:h,props:{href:"#1-null%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"1. Null이란 무엇인가?"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"우선 null이란, 아직 값이 정해지지 않은 것을 의미합니다.\n그럼 null이라는 것이 왜 필요할까요?"}]},{type:a,value:c},{type:b,tag:v,props:{id:"null의-필요성"},children:[{type:b,tag:h,props:{href:"#null%EC%9D%98-%ED%95%84%EC%9A%94%EC%84%B1",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"null의 필요성"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Dart는 실제 세계를 최대한 반영한 객체 지향 언어 중 하나입니다. 예시를 하나 보시죠.\n어떤 사람에게 좋아하는 음식을 물었을 때 아래와 같이 대답했다고 가정을 해봅시다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"Food favorite = water;\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그 사람이 심드렁하게 \"물이요\"라고 대답을 했을 경우,\n우리는 그 사람은 좋아하는 음식이 없다고 해석이 될 수 있습니다.\n그렇다면 코드 상에서도 이 상황과 맞게 표현을 해줄 수 있어야 합니다.\n이럴 때 필요한 개념이 "},{type:b,tag:G,props:{},children:[{type:a,value:"null"}]},{type:a,value:" 입니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:cC}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이와 같이 표현하면 위의 상황을 만족시킬 수 있습니다.\n흔히 null은 추상적으로 오류를 일으키는 존재로서 알고 있기 쉬운데,"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"알고보면 중요한 표현 중 하나입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그럼 위의 상황에서,\nfavorite의 타입은 Food일까요?"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"자세하게 표현하면, favorite은 Food type이기 전에 nullable한 타입이 됩니다.\n그럼 또 하나 예를 들어보겠습니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"void whatIsYourFood(Food f){\n    String cooker = f.recipe.toString();\n    print(cooker);\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이 상황에서 입력값에 null이 들어가면 어떻게 될까요? 실행이 안됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"따라서 이를 해결하기 위해,\n코드상에서 우리는 아래와 같이 NullPointException을 처리해줘야 합니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"void whatIsYourFood(Food f){\n    if (f == null){\n        print('need a food name');\n    }\n    else{\n        String cooker = f.recipe.toString();\n        print(cooker);\n    }\n}\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"하지만 개발자의 입장에서 모든 코드에 이를 처리해주기 어렵기 때문에 등장한 개념이 바로 Null safety 입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"즉 변수들은 null값을 가질 수 없고,\n이런 null safety는 이번 업데이트와 함께 default값이 되었습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"다시 말해 아래의 코드는 컴파일단계에서 null 값의 할당을 막아 오류를 발생시킵니다."}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:"int age;\nint age = null;\n"}]}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그럼 우리는 여기서 한 가지 의문점이 생겨야합니다.\n제일 먼저 예시를 들었던 것처럼 좋아하는 음식이 없을 때 우리는 어떻게 표현을 해야할까요?"}]},{type:a,value:c},{type:b,tag:p,props:{className:[q]},children:[{type:b,tag:r,props:{className:[w,s]},children:[{type:b,tag:t,props:{},children:[{type:a,value:cC}]}]}]},{type:a,value:c},{type:b,tag:K,props:{id:au},children:[{type:b,tag:h,props:{href:av,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]}]},{type:a,value:c},{type:b,tag:v,props:{id:"2-기존-코드의-문제점과-해결방법"},children:[{type:b,tag:h,props:{href:"#2-%EA%B8%B0%EC%A1%B4-%EC%BD%94%EB%93%9C%EC%9D%98-%EB%AC%B8%EC%A0%9C%EC%A0%90%EA%B3%BC-%ED%95%B4%EA%B2%B0%EB%B0%A9%EB%B2%95",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"2. 기존 코드의 문제점과 해결방법"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"앞의 내용의 요약과 몇가지 추가 내용을 전제로 하겠습니다."}]},{type:a,value:c},{type:b,tag:"blockquote",props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"(1) 모든 변수는 null이 될 수 없으며, non-nullable 변수에는 null값이 할당할 수 없음\n(2) non-nullable 변수를 위한 null check가 필요 없음\n(3) Class 내의 변수는 반드시 선언과 동시에 초기화를 시켜야함"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"아래의 코드는 "},{type:b,tag:h,props:{href:"https:\u002F\u002Fdartpad.dev\u002F?null_safety=true",rel:[U,V,W],target:X},children:[{type:a,value:"DartPad"}]},{type:a,value:" 에서 실행시킨 모습입니다."}]},{type:a,value:c},{type:b,tag:v,props:{id:"의-사용법"},children:[{type:b,tag:h,props:{href:"#%EC%9D%98-%EC%82%AC%EC%9A%A9%EB%B2%95",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"?의 사용법"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"우리는 null값이 필요한 경우 null safety 개념 하에서 어떻게 적용을 해야되는지 의문을 던지며 마무리를 했습니다. 그 상황과 더불어 변수 초기화를 나중에 해야되는 경우도 아래의 예시로 같이 설명하겠습니다. (전제 3에 해당하는 내용)"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"img1",src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F142855614-9be6d3fd-31a9-440e-8201-1d8ae6d82986.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"위의 코드는 이름을 입력받아 대문자로 바꿔주는 코드입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"보면 알 수 있듯이, name이라는 변수에 아무런 입력값이 주어지지 않아 초기화가 되지 않았기 때문에 Non-nullable인 변수 name이 초기화되어야한다고 친절히 오류를 안내해주고 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이럴 때 우리는 타입 뒤에 \"?\"라는 것을 붙여서 오류를 해결해줄 수 있습니다.\n"},{type:b,tag:G,props:{},children:[{type:a,value:"?는 이 변수에 어떤 데이터가 할당될 수도, null값이 할당될 수 있다는 것을 의미합니다."}]},{type:a,value:"\nKotlin 등과 같은 경험이 있으신 분들은 이미 알고 계신 내용일 것입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"img2",src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F142855618-f7e7893a-d196-4575-b074-6c954ddca053.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그럼 2번째 줄에 대한 오류는 사라졌지만, 새로운 오류가 발생합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이는 name이라는 변수에는 null이 들어올 수도 있다고 표현을 해줘서 괜찮지만,\nnameChange 매서드의 인자값에 String이 와야한다고 했기 때문입니다.\n다시, 바로 앞에서 해결한 것처럼 똑같이 해결해줄 수 있습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"img3",src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F142855619-b0f694ea-ca91-4cd2-925b-f688606b3f40.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그럼 기존 오류는 사라지고 새로운 오류가 발생합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"toUpperCase 매서드는 name의 값이 null이 될 수 있기 때문에 호출될 수 없다고 합니다.\n이 경우는 예외처리를 통해 해결해주겠습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"img4",src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F142855622-272aa598-8bcd-4403-b777-268d2bce28de.png"},children:[]}]},{type:a,value:c},{type:b,tag:K,props:{id:at},children:[{type:b,tag:h,props:{href:aM,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]}]},{type:a,value:c},{type:b,tag:v,props:{id:"late의-사용법-전제-3에-대하여"},children:[{type:b,tag:h,props:{href:"#late%EC%9D%98-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%A0%84%EC%A0%9C-3%EC%97%90-%EB%8C%80%ED%95%98%EC%97%AC",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"late의 사용법 (전제 3에 대하여)"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"새로운 예시를 들어보겠습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"img5",src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F142855624-68817925-b870-4214-bc82-fa043ebe4853.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Person이라는 class에서 age라는 int를 선언해주었지만, 아직 초기화를 해주지 않았습니다.\n하지만 main에서 sum이라는 메서드 안에 int를 100이라고 넣어주었습니다.\n"},{type:b,tag:G,props:{},children:[{type:a,value:"즉 앞의 예시와는 비슷해보이지만 의도가 다른 코드입니다."}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이와 같이 변수에 값이 바로 할당되는 것이 아니라, 나중에 할당되어야 하는 경우,\n우리는 late라는 키워드를 변수 앞에 붙여줍니다.\n말 그대로 늦게 초기화시켜준다는 것을 의미합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"img6",src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F142855625-2495b469-aa74-4921-937d-380cac718e20.png"},children:[]}]},{type:a,value:c},{type:b,tag:K,props:{id:aK},children:[{type:b,tag:h,props:{href:br,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]}]},{type:a,value:c},{type:b,tag:v,props:{id:"의-사용법-1"},children:[{type:b,tag:h,props:{href:"#%EC%9D%98-%EC%82%AC%EC%9A%A9%EB%B2%95-1",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"!의 사용법"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"새로운 예시와 함께 아직 설명하지 않은 내용에 대해 설명하겠습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"img7",src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F142855627-dc89527f-e622-440d-810b-d606a22e64f5.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"위의 코드는 x가 0보다 크면 x값을 y에 할당을 하고,\n이를 value라는 값에 재할당하여 print하는 코드입니다.\n이 코드에서 왜 오류가 발생할까요?"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이는 non-nullable한 변수에 nullable한 변수를 할당할 수 없기 때문입니다.\n이럴 경우 우리는 !를 사용해줍니다.\n"},{type:b,tag:G,props:{},children:[{type:a,value:"!는 항상 non-nullable한 값을 가진다라는 것을 의미합니다."}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"img8",src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F142855630-437cd4a6-14ff-4658-abb0-9835f64d96a9.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이처럼 nullable한 변수가 non-nullable한 값을 가진다라는 확신이 있으면\n!(exclamation mark or bang)을 사용해주면 됩니다."}]},{type:a,value:c},{type:b,tag:K,props:{id:aL},children:[{type:b,tag:h,props:{href:bs,ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]}]},{type:a,value:c},{type:b,tag:v,props:{id:"required의-사용법"},children:[{type:b,tag:h,props:{href:"#required%EC%9D%98-%EC%82%AC%EC%9A%A9%EB%B2%95",ariaHidden:j,tabIndex:k},children:[{type:b,tag:d,props:{className:[l,m]},children:[]}]},{type:a,value:"required의 사용법"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"마지막 내용도 새로운 예시와 함께 설명하겠습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"img9",src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F142855632-66569afc-2f18-4d7d-9c26-8bca4e5d3f74.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"add라는 함수에서는 인자 a, b를 받아 더해주고 있지만, main함수에서는 인자 a, b에 어떤 값도 할당시켜주지 않은 상태입니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"이런 상황에서는 required라는 키워드를 함수 내 인자들 앞에 추가해주면 됩니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:G,props:{},children:[{type:a,value:"required는 말 그대로 not optional하다는 얘기입니다."}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그리고 main내에서 add함수에 a는 null값을, b에는 5라는 정수를 넣어보겠습니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"img10",src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F142855637-10ee89a7-af9f-47f4-9eb0-66f9a7b38154.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"위의 상황에서는 어떻게 해야할까요?"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"앞서 해결했듯이, 우선 a에 null값이 들어올 수 있다는 것을 표현하기 위해 함수 내 a의 type을 나타내는 int 뒤에 ?을 붙여줘야합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"img11",src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F142855639-de43c827-40fe-4d01-8a64-9e6844f91668.png"},children:[]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"근데 사진과 같은 새로운 오류가 발생합니다.\n이 말은, null값으로 덧셈 연산을 해줄 수 없다는 것을 나타냅니다. 즉 우리는 변수 a에 대한 null 체크를 해줘야합니다."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"그럼 a의 값이 null인 경우에 b의 값만 return하라고 체크해주겠습니다"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:u,props:{alt:"img12",src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F26942349\u002F142855661-b76a92ef-24f6-4d80-ad69-8e12b64d77cf.png"},children:[]}]}]},dir:ac,path:"\u002Fblog\u002Fflutter-study-week1",extension:ad,createdAt:"2021-11-22T15:55:07.000Z",updatedAt:"2021-11-25T16:26:39.000Z"}]}],fetch:{},mutations:void 0}}("text","element","\n","span","token","p","punctuation","a","operator","true",-1,"icon","icon-link","li"," ","div","nuxt-content-highlight","pre","line-numbers","code","img","h4","language-text","ul","literal-property","property",":",",",3,"h3","string","}","strong","{","maybe-class-name","\n    ","h1","=","\n        ","\u003C","\u003E","ol",".","property-access","keyword","number","nofollow","noopener","noreferrer","_blank","language-javascript",";","function","\u002F","Application","root","\u002Fblog",".md","(",")","","contents","#contents","Contents","backgroundColor","br","https:\u002F\u002Fwww.udemy.com\u002Fcourse\u002Fflutter-bootcamp-with-dart\u002F","The Complete 2021 Flutter Development Bootcamp with Dart",2,"const","PropTypes"," style","image","-2","-1","#-1","ThemeProvider","module","\n            ","스타일","Text","\n  ","flex","MinJun Choi","Future class","async, await keyword","try, catch","geolocator package","json converting","길이가 긴 위젯은 어떻게 리팩토링 해야할까?","-3","-4","#-2","React Native 스터디 3주차","Dimensions","export","isRequired","\n                ","constant","Package 란?","Package 사용법","_ (under bar) 의 의미","@override 의 의미","Reactnative 스터디 2주차","color","10","Box","1","future-class","async-await-keyword","try-catch","geolocator-package","json-converting","h5","그-외","#%EA%B7%B8-%EC%99%B8","그 외","3-그-외","#3-%EA%B7%B8-%EC%99%B8","3. 그 외","2022-01-26T06:07:12.000Z","songgyeong Oh","flutter-스터디-5주차---widget-refactoring","Flutter 스터디 5주차 - Widget Refactoring","길이가-긴-위젯은-어떻게-리팩토링-해야할까-1","#-3","#-4","2022-01-25T06:04:58.000Z","none","react-native-스터디-3주차","배웠던-내용-복습","배웠던 내용 복습","프로젝트-시작하기","프로젝트 시작하기","dimensions","컴포넌트에-attrs-사용하기","컴포넌트에 attrs 사용하기","h2","background","func","[","newTask","]","''","function-variable","arrow","=\u003E","template-punctuation","`","interpolation-punctuation","setNewTask","  ","comment","StatusBar","theme","Container","Title","2022-01-17T14:32:09.000Z","package-란","package-사용법","_-under-bar-의-의미","override-의-의미","2022-01-10T11:23:08.000Z","flutter-스터디-3주차---stateful","Flutter 스터디 3주차 - Stateful","State의 종류","Stateful widget 과 Stateless widget","2021-12-27T07:01:58.000Z","flutter-스터디-2주차---scaffold","Flutter 스터디 2주차 - Scaffold","Material Design 과 Scaffold","Body","Bottom Navigation Bar","2021-11-26T14:32:45.000Z","reactnative-스터디-2주차","flexbox","Flexbox","\"red\"","StyleSheet","errorText","\"black\"","20","styled-component","shadow","height","200","width","2021-11-26T09:59:10.000Z","flutter-20---null-safety","Flutter 2.0 - Null Safety","Food favorite = null;\n")));